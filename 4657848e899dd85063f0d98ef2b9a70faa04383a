{
  "comments": [
    {
      "key": {
        "uuid": "3efbca19_9368d3e7",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/ancer/BaseOperation.hpp",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-01-28T17:52:40Z",
      "side": 1,
      "message": "(Self-resolved) I wonder if there\u0027s a way in C++ to declare a function so that it will \"std::move\" its argument even if not explicitly asked so.\nWhen move semantics were introduced 10 years ago, I thought that the \"\u0026\u0026\" notation on a declaration made \"std::move\" to forcefully happen. Looks like it\u0027s just half of the story but the caller must explicitly \"std::move\" to truly materialize the intention.",
      "revId": "4657848e899dd85063f0d98ef2b9a70faa04383a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "315da503_e8269572",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/CalculatePIOperation.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-01-28T17:52:40Z",
      "side": 1,
      "message": "Do we still need the JSON_WRITER(...) fragment now that we have the WriteDatum(...)? I noticed that, in the other source files, WriteDatum(...) superseded JSON_WRITER(...).\nSounds a lot like lines 80 to 90 should go away.",
      "revId": "4657848e899dd85063f0d98ef2b9a70faa04383a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06c325b5_0051a530",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/CalculatePIOperation.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1557643
      },
      "writtenOn": "2020-01-28T18:28:37Z",
      "side": 1,
      "message": "I\u0027m also concerned; it appears that in some cases the JSON_WRITER is disposed of completely. Is there a reason? Or is it an oversight?",
      "parentUuid": "315da503_e8269572",
      "revId": "4657848e899dd85063f0d98ef2b9a70faa04383a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14b1e8de_643ccd78",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/CalculatePIOperation.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-01-28T18:52:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06c325b5_0051a530",
      "revId": "4657848e899dd85063f0d98ef2b9a70faa04383a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b14ea749_27b7d201",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/CalculatePIOperation.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1557643
      },
      "writtenOn": "2020-01-29T17:16:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14b1e8de_643ccd78",
      "revId": "4657848e899dd85063f0d98ef2b9a70faa04383a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4331f7b3_36f1eeb4",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/CalculatePIOperation.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1597621
      },
      "writtenOn": "2020-02-10T18:58:05Z",
      "side": 1,
      "message": "Yep, it\u0027s an oversight. I\u0027ll do a quick review.\n\nI\u0027m going to keep the macro around for now just because removing it is outside the scope of this change and it may have value in the future (e.g., writing a test file or outputting a default configuration).",
      "parentUuid": "06c325b5_0051a530",
      "revId": "4657848e899dd85063f0d98ef2b9a70faa04383a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5365f32d_5f394e46",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/gl/BufferStorageGLES3Operation.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1557643
      },
      "writtenOn": "2020-01-28T18:27:33Z",
      "side": 1,
      "message": "Why isn\u0027t this available via the ADD_DATUM_MEMBER macro?",
      "revId": "4657848e899dd85063f0d98ef2b9a70faa04383a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77e070fe_f50d9739",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/gl/BufferStorageGLES3Operation.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1557643
      },
      "writtenOn": "2020-01-29T17:16:16Z",
      "side": 1,
      "message": "Is this a consequence of BufferStorageStatus being an enum? If so is it possible to make an ADD_DATUM_ENUM_MEMBER macro?",
      "parentUuid": "5365f32d_5f394e46",
      "revId": "4657848e899dd85063f0d98ef2b9a70faa04383a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}