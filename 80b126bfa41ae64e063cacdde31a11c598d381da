{
  "comments": [
    {
      "key": {
        "uuid": "189b4a42_b1f4ee9d",
        "filename": "cert/test/reporting/lib/common.py",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-02-06T19:13:19Z",
      "side": 1,
      "message": "Thanks! (S/R -\u003e self-resolved)",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6279e490_d7b1810e",
        "filename": "cert/test/reporting/lib/common.py",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-02-06T20:03:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "189b4a42_b1f4ee9d",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2207bb8a_fb66eab1",
        "filename": "cert/test/reporting/lib/deployment.py",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-02-06T19:13:19Z",
      "side": 1,
      "message": "(S/R) An observation to make is that `quiet` is false by default. But then it seems that all calls to run_command specify it as true. Maybe the default should be true?",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5be5b33c_f6f6fbeb",
        "filename": "cert/test/reporting/lib/deployment.py",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1557643
      },
      "writtenOn": "2020-02-06T19:46:23Z",
      "side": 1,
      "message": "I think you\u0027re correct. Will do.",
      "parentUuid": "2207bb8a_fb66eab1",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e70cb434_1ada62b3",
        "filename": "cert/test/reporting/lib/deployment.py",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-02-06T20:03:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5be5b33c_f6f6fbeb",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faffafd8_02a36965",
        "filename": "cert/test/reporting/lib/report.py",
        "patchSetId": 2
      },
      "lineNbr": 358,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-02-06T19:13:19Z",
      "side": 1,
      "message": "Great catch, Shamyl. ðŸ––\n(S/R)",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a9b1ce6_88461900",
        "filename": "cert/test/reporting/lib/report.py",
        "patchSetId": 2
      },
      "lineNbr": 358,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-02-06T20:03:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "faffafd8_02a36965",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "372a744b_9b75d0b1",
        "filename": "cert/test/reporting/lib/summary.py",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-02-06T19:13:19Z",
      "side": 1,
      "message": "I actually believe that *_error.json should also be \"post-asterisked\". If we run with two or more devices of same brand and model in parallel with such bad luck that two or more of them crash, the same issue that could happened with *_report.json files would occur with *_error.json counterparts; my guess.\n(S/R)",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4742b44_181fe952",
        "filename": "cert/test/reporting/lib/summary.py",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1557643
      },
      "writtenOn": "2020-02-06T19:46:23Z",
      "side": 1,
      "message": "You know, you\u0027re 100% right here. I\u0027m going to dig in to where the error.jsno files are created and make the same naming policy. I think better now, than lose data later.",
      "parentUuid": "372a744b_9b75d0b1",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed7e3e35_c1700c98",
        "filename": "cert/test/reporting/lib/summary.py",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1557643
      },
      "writtenOn": "2020-02-06T20:00:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4742b44_181fe952",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff2dd65a_5a3a5d86",
        "filename": "cert/test/reporting/lib/summary.py",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-02-06T20:03:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed7e3e35_c1700c98",
      "revId": "80b126bfa41ae64e063cacdde31a11c598d381da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}