{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "93c4ea3f_e1e1229d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-04-18T21:45:37Z",
      "side": 1,
      "message": "Revisions after first round of NDK API council feedback, not sure who else should be added (or if I can add the group email alias). This is not an urgent priority, can wait for whatever the regular schedule is.",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62773cf2_fa554684",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "Sorry for the very long review delay ðŸ˜ž I\u0027ve been very busy and lost track of it. Don\u0027t hesitate to ping me any time I take longer than a few days.",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a6975bb_744a0e12",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 293,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "The sentence structure here was really difficult for me to parse. Replace the first part with \"Bitmask values for use with ::Paddleboat_getIntegratedMotionSensorFlags...\"?",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfc8a269_0920e04f",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 293,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T19:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a6975bb_744a0e12",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65cfec95_53437392",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "Provide a backing type (it\u0027s not standard C but clang supports it even for non-C++). We\u0027re super inconsistent about this since the policy is new, but it\u0027s a great ABI compat defense so might as well for anything new (feel free to update old enums to use a backing type as well, just be careful to make sure the backing type doesn\u0027t _change_ when you do so).",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8d5c97f_63ee40a0",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T19:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65cfec95_53437392",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52109945_0c587fc9",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 324,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "One of these things is not like the others. It seems like the is unrelated to the other three values and shouldn\u0027t be a part of the same enum?",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c73ec3ce_a89aae87",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 324,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T19:59:39Z",
      "side": 1,
      "message": "Moved to its own enum",
      "parentUuid": "52109945_0c587fc9",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67880553_45082b46",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 502,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "As before: backing type",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14ef28ff_2f7181c4",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 502,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T19:59:39Z",
      "side": 1,
      "message": "Removed, switched to bool.",
      "parentUuid": "67880553_45082b46",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7df20b0e_a49f083c",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 504,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "Are you expecting other states in the future? Put another way, why isn\u0027t this just a bool?",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5edd250f_5a8d0b00",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 504,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T19:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7df20b0e_a49f083c",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae2fc561_8ae43520",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 834,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "physicalKeyboardStatus (or just status)",
      "range": {
        "startLine": 834,
        "startChar": 48,
        "endLine": 834,
        "endChar": 59
      },
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b48f32fe_3b32a877",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 834,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T19:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae2fc561_8ae43520",
      "range": {
        "startLine": 834,
        "startChar": 48,
        "endLine": 834,
        "endChar": 59
      },
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d22584f_6b874e94",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 937,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "Use the enum directly (we used to advise against this because we couldn\u0027t be sure of the backing type, but now that we can specify backing types we can also use the enums directly here, which improves documentation and IDE behavior)",
      "range": {
        "startLine": 937,
        "startChar": 0,
        "endLine": 937,
        "endChar": 8
      },
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c715112_9e1289b1",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 937,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T19:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d22584f_6b874e94",
      "range": {
        "startLine": 937,
        "startChar": 0,
        "endLine": 937,
        "endChar": 8
      },
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1afd73db_f91dd3e2",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 987,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "If the caller requests data for a sensor that the device doesn\u0027t have, is it worth reporting an error?",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5faa20d_1dc0c854",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 987,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T19:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1afd73db_f91dd3e2",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a32239a8_30f5989d",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 1151,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-22T03:41:08Z",
      "side": 1,
      "message": "I have no idea what this means.",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77be3503_2828d44f",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 1151,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T19:59:39Z",
      "side": 1,
      "message": "Added an additional sentence to provide a bit more context. This is an advanced feature most developers won\u0027t use (but the ones that want it really want it).",
      "parentUuid": "a32239a8_30f5989d",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7197f4a7_2bc1c45d",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 1151,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-23T20:05:44Z",
      "side": 1,
      "message": "It might be clear enough for the users that need it, but we can\u0027t review APIs we can\u0027t understand ðŸ˜ž I still don\u0027t know what this means so I can\u0027t evaluate it.\n\nWhat is \"custom controller information\"? A mapping of what to what?",
      "parentUuid": "77be3503_2828d44f",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1994626_a29152ee",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 1151,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-06-23T20:56:52Z",
      "side": 1,
      "message": "Ah, sorry. So, a particular controller device generates two types of input events: motion events tied to a motion axis, and keycode events.\n\nThe particular Android NDK motion axis IDs and keycodes used by a particular controller can vary, and sometimes aren\u0027t what you would expect. So there is the concept of a mapping table for a controller device that takes \u0027Android axis enum X\u0027 or \u0027keycode Y\u0027 and translates to \u0027Game Controller axis enum X\u0027 or \u0027button enum Y\u0027.\n\nThe Game Controller library has its own standard enum definitions for axis and buttons (keycodes). This results in consistent controller behavior to the end-user developer.\n\nWhile the Game Controller library has a built in default \u0027database\u0027 of controller mappings for a variety of common controllers, these particular API functions allow for adding new mappings for controllers that aren\u0027t in the default, or overriding existing controller mapping entries that are in the default.\n\nFor scalability, 1.2 is deprecating the original functions and the new function expects a binary blob generated by an open source companion tool. The blob includes versioning information so the library can return PADDLEBOAT_INVALID_MAPPING_DATA or PADDLEBOAT_INCOMPATIBLE_MAPPING_DATA if you pass it garbage or data from an incompatible version of the tool.",
      "parentUuid": "7197f4a7_2bc1c45d",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40dcb924_a808e1a5",
        "filename": "GameController/src/main/cpp/paddleboat/include/paddleboat.h",
        "patchSetId": 4
      },
      "lineNbr": 1151,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-06-23T21:42:30Z",
      "side": 1,
      "message": "Okay, so basically mapping from inconsistent hardware assignments of axes/buttons to something consistent so game devs don\u0027t have to handle each controller\u0027s quirks?\n\nIf that\u0027s correct, let\u0027s expand the docs here to cover a bit of that. One thing that definitely needs to be covered (and which I haven\u0027t figured out myself yet) is the format of the buffer. I now know what this API does, but still don\u0027t know how to actually use it.\n\nHow about something like:\n\n\u003e @brief Defines how hardware button/axis IDs will map to GameController buttons and axes. Use this to define mappings for unsupported controllers or to override the defaults for controllers that already have default mappings in GameController.\n\u003e \n\u003e Raw axis/button assignments are not consistent from controller to controller. GameController remaps axis and buttons from known controllers in a consistent manner so games do not have to account for this themselves. For a list of controllers that have default mappings included in GameController, see (TODO: link).\n\u003e \n\u003e To add support for a new controller or to override the default mapping, (TODO: instructions for how to use this)\n\nAfter a bit of digging (I always avoid this up front because it makes the doc gaps more obvious if I try to use them alone), it seems like https://developer.android.com/games/sdk/game-controller/custom-mapping should be linked here too?\n\n\u003e the new function expects a binary blob\n\nNo cause for alarm yet, but this is generally grounds for API rejection. I\u0027ve seen a few APIs attempt to do this before and in each case the motivation has been to decouple API breakages from the headers. We can\u0027t approve things like that because they evade our ABI/API stability tooling. Blobs are okay as inputs when the format is well specified (a UTF-8 string, a PNG encoded image, etc).\n\nWhat\u0027s the format of the data here? How does this scale better than `Paddleboat_Controller_Mapping_Data`?",
      "parentUuid": "a1994626_a29152ee",
      "revId": "129ab0998261ff4976d6b4d19b7ebb546b6b7534",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}