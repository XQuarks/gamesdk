{
  "comments": [
    {
      "key": {
        "uuid": "04c18f00_9ea0690e",
        "filename": "bender/bender-base/app/src/main/jni/material.cc",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1572660
      },
      "writtenOn": "2020-04-29T20:40:59Z",
      "side": 1,
      "message": "This is maybe not a big deal; would we be able to resolve this issue by just adding a param to change what format the resulting Texture is? Seems like only a slightly more verbose direction compared to just using UNORM by default and picking an in-between data value.",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "909c0323_f4dd7d7a",
        "filename": "bender/bender-base/app/src/main/jni/material.cc",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2020-04-30T14:57:00Z",
      "side": 1,
      "message": "Wouldn\u0027t that be an issue with this being a static variable of Material? Whatever texture gets loaded first will get to pick what the texture format is and then it\u0027s set for the rest of the materials that need a default texture. Also the only time we create the default texture is when one of the passed in textures is null, so we have no real information about what that texture should be (beyond it\u0027s position in the array, but that\u0027s just a stopgap until we figure out a better way to setup our material system)",
      "parentUuid": "04c18f00_9ea0690e",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ff020ec_ca9f1c48",
        "filename": "bender/bender-base/app/src/main/jni/material.cc",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1572660
      },
      "writtenOn": "2020-04-30T15:05:27Z",
      "side": 1,
      "message": "Oh got it, I forgot when we discussed this previously about this being static. Is there anything stopping us from holding onto two default textures (one with SRGB and one with UNORM)?",
      "parentUuid": "909c0323_f4dd7d7a",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b936b97d_47d3e261",
        "filename": "bender/bender-base/app/src/main/jni/material.cc",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2020-04-30T15:10:49Z",
      "side": 1,
      "message": "Not necessarily, I thought about making this a vector of default textures but the issue is I\u0027m still not sure how we can decide which default texture to pick based on a nullptr Texture that gets passed into the constructor",
      "parentUuid": "0ff020ec_ca9f1c48",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc7743c6_793894b4",
        "filename": "bender/bender-base/app/src/main/jni/material.cc",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1566081
      },
      "writtenOn": "2020-07-29T16:30:20Z",
      "side": 1,
      "message": "SRGB is really for artist colors. So default color textures. It\u0027s also for final output framebuffers (HDR throws a wrench into things and a bit of complexity, but in most cases, SRGB is your output).\n\nThe exceptions are: \n- Intermediate, high-precision render targets using \u003e8-bits per channel. (Worth it in some cases, but usually only for HDR).\n- Normal maps/LUTs/PBR metallic/rough maps, specular maps, etc.\n- GBuffers, things like that.\n\nEverything else is SRGB. \n\nBut here\u0027s the thing: There\u0027s nothing stopping you from using SRGB data where you need to use Linear, or vice-versa - the sampling hardware will take care of it for you and do the (unnecessary?) work. When dealing with missing textures I\u0027m not sure it matters if it\u0027s darker or lighter than it needs to be. :) \n\nWe could push for better \"type safety\" for use of SRGB/Linear in different scenarios, but really we just need anything to make sure we can keep pushing forward when the assets are broken, but we don\u0027t care about those specific assets being broken right now.\n\nRealistically, this is the kind of thing best handled by putting any working dummy texture in there, but emitting something to the log that says \"Hey, this texture is completely missing! Fix it!\" for the artists.",
      "parentUuid": "b936b97d_47d3e261",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d37bf7fc_8e167111",
        "filename": "bender/bender-base/app/src/main/jni/renderer.h",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1572660
      },
      "writtenOn": "2020-04-29T20:40:59Z",
      "side": 1,
      "message": "Minor nit for style (naming with underscores)?",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2144721_a56319c6",
        "filename": "bender/bender-base/app/src/main/jni/renderer.h",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2020-04-30T14:57:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d37bf7fc_8e167111",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f0028d8_01c14092",
        "filename": "bender/bender-base/app/src/main/shaders/mesh.frag",
        "patchSetId": 8
      },
      "lineNbr": 141,
      "author": {
        "id": 1572660
      },
      "writtenOn": "2020-04-29T20:40:59Z",
      "side": 1,
      "message": "What are these vec values from (for both this and next line)? And can you make them const or something to make it more clear what they represent?",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "160bd902_f3dc9a83",
        "filename": "bender/bender-base/app/src/main/shaders/mesh.frag",
        "patchSetId": 8
      },
      "lineNbr": 141,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2020-04-30T14:57:00Z",
      "side": 1,
      "message": "Ended up changing the uniform buffer to store this information so we can set it CPU side (this is the direction light color/intensity, the vec3 in the vertex shader is the direction light direction) so now it should be clearer!",
      "parentUuid": "2f0028d8_01c14092",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83007ca8_c48dd11e",
        "filename": "bender/bender-base/app/src/main/shaders/mesh.vert",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1572660
      },
      "writtenOn": "2020-04-29T20:40:59Z",
      "side": 1,
      "message": "Same comment as above (pull out and name the constant vec).",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe419814_dfc751f5",
        "filename": "bender/bender-base/app/src/main/shaders/mesh.vert",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2020-04-30T14:57:00Z",
      "side": 1,
      "message": "See comment in fragment shader",
      "parentUuid": "83007ca8_c48dd11e",
      "revId": "61a844ef3ad669b789afcae00499b42ffdbc9e9d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}