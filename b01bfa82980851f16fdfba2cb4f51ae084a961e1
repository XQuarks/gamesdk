{
  "comments": [
    {
      "key": {
        "uuid": "37a91150_36c7568c",
        "filename": "src/extras/src/main/java/com/google/androidgamesdk/SwappyDisplayManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2019-06-06T14:41:30Z",
      "side": 1,
      "message": "The ChoreographerCallback is in package com.google.swappy, even though it\u0027s in the same directory as this. We need to make it consistent.",
      "revId": "b01bfa82980851f16fdfba2cb4f51ae084a961e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0d3cd05_e12e5124",
        "filename": "src/extras/src/main/java/com/google/androidgamesdk/SwappyDisplayManager.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2019-06-06T16:37:44Z",
      "side": 1,
      "message": "This was already done in aosp/978247",
      "parentUuid": "37a91150_36c7568c",
      "revId": "b01bfa82980851f16fdfba2cb4f51ae084a961e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfd4c2f1_c866c053",
        "filename": "src/extras/src/main/java/com/google/androidgamesdk/SwappyDisplayManager.java",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2019-06-06T15:12:34Z",
      "side": 1,
      "message": "What\u0027s this library? Loading of it needs to go in client code, I think.",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 143,
        "endChar": 5
      },
      "revId": "b01bfa82980851f16fdfba2cb4f51ae084a961e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "654901a9_99a611f4",
        "filename": "src/swappy/common/SwappyDisplayManager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2019-06-06T14:41:30Z",
      "side": 1,
      "message": "You can\u0027t call abort in library code. We either need a fallback for when the SwappyDisplayManager class is not available or we need to disable swappy.",
      "revId": "b01bfa82980851f16fdfba2cb4f51ae084a961e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5afaee29_a9e13893",
        "filename": "src/swappy/common/SwappyDisplayManager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2019-06-06T16:37:44Z",
      "side": 1,
      "message": "I wanted to abort to make sure extras is integrated. We can easily continue without SwappyDisplayManager, but then it will be hard to catch integration issues around extras. \nFrom Swappy perspective, this is a fatal error due to integration issues.",
      "parentUuid": "654901a9_99a611f4",
      "revId": "b01bfa82980851f16fdfba2cb4f51ae084a961e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f49cb73_d19ff8be",
        "filename": "src/swappy/common/SwappyDisplayManager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2019-06-11T13:35:38Z",
      "side": 1,
      "message": "I would hate to have this occur in a user-facing context, and given the weirdnesses that can occur in the wild (i.e. classloader behaviour getting messed with by OEMs or copy protection vendors) I don\u0027t think we should go with \u0027abort\u0027. \n\nHowever I also agree that we need something stronger than TTY. Perhaps we can have an \u0027unrecoverable error\u0027 callback which has the default behaviour of calling abort but which the developer can override with handling of their choosing?",
      "parentUuid": "5afaee29_a9e13893",
      "revId": "b01bfa82980851f16fdfba2cb4f51ae084a961e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}