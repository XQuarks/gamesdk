{
  "comments": [
    {
      "key": {
        "uuid": "19c9c80e_fda8c152",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/gl/ExternalBufferGLES3Operation.cpp",
        "patchSetId": 11
      },
      "lineNbr": 162,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-03-27T02:09:16Z",
      "side": 1,
      "message": "[S/R]\nCurious about the effect of swapping positions so that the constant value (nullptr) goes first.\nI\u0027m sure there\u0027s something to gain but a quick Google about it brought other results (I probably failed at asking the right search)",
      "revId": "b6bca2d620f3a752f0a8d94234e9451b1fbe329b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08eb454c_0e143dec",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/gl/ExternalBufferGLES3Operation.cpp",
        "patchSetId": 11
      },
      "lineNbr": 162,
      "author": {
        "id": 1599245
      },
      "writtenOn": "2020-03-27T20:11:04Z",
      "side": 1,
      "message": "Good question. You know, now that I look into it, I see that clang complains about the sort of thing this pattern is trying to prevent. The idea is to have the non-assignable value on the left to eliminate bugs like `if (fp_alloc \u003d nullptr)`. I can\u0027t even remember where I saw this \"advice\", but it seems obsolete. (Or perhaps my memory of it was wrong?) At any rate, I\u0027m going to quickly change it back, since it reads better the other way, appears to be more standard, and I\u0027m convinced our compiler will handle it (it triggers `-Werror -Wparenthesis`). As an aside, the reason I changed it here was because this so closely parallels the new test I was writing (which the CL is mainly about).",
      "parentUuid": "19c9c80e_fda8c152",
      "revId": "b6bca2d620f3a752f0a8d94234e9451b1fbe329b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f99daec8_0ca91652",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/gl/ExternalBufferGLES3Operation.cpp",
        "patchSetId": 11
      },
      "lineNbr": 162,
      "author": {
        "id": 1590267
      },
      "writtenOn": "2020-03-27T20:49:49Z",
      "side": 1,
      "message": "Great explanation (i.e., to prove the compiler that you meant check for equality and not assign).\nPlease don\u0027t change this back if my question sounded a call to revert. Not at all.\nI\u0027ll adopt this practice myself!!",
      "parentUuid": "08eb454c_0e143dec",
      "revId": "b6bca2d620f3a752f0a8d94234e9451b1fbe329b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3773a80_e0384858",
        "filename": "cert/test/AndroidCertTest/app/src/main/cpp/operations/gl/ExternalBufferGLES3Operation.cpp",
        "patchSetId": 11
      },
      "lineNbr": 162,
      "author": {
        "id": 1599245
      },
      "writtenOn": "2020-03-27T20:55:06Z",
      "side": 1,
      "message": "Given that I can\u0027t even find the original source where I saw this, and that several respectable books use the `if (fptr \u003d\u003d nullptr)` convention (instead of the way you asked about), and that the compiler will actually catch the issues here, I don\u0027t think my original reasoning (the reasoning I explained) stands.",
      "parentUuid": "f99daec8_0ca91652",
      "revId": "b6bca2d620f3a752f0a8d94234e9451b1fbe329b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}