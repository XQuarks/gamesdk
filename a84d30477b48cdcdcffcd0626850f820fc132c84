{
  "comments": [
    {
      "key": {
        "uuid": "0103ad6d_9c41c9d4",
        "filename": "src/swappy/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2019-04-16T16:49:27Z",
      "side": 1,
      "message": "Looks like we have twice Swappy.cpp. Let\u0027s remove one of them",
      "revId": "a84d30477b48cdcdcffcd0626850f820fc132c84",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2583aa17_e2eb1e5d",
        "filename": "src/swappy/Swappy.h",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2019-04-16T16:49:27Z",
      "side": 1,
      "message": "Nit: std::unique_ptr\u003cSwappyCommon\u003e mCommonBase;\n\nDefining a unique pointer allows you to avoid including SwappyCommon.h and just have \u0027class SwappyCommon;\u0027 as forward declaration (SwappyCommon.h will be included in Swappy.cpp). This is useful to avoid circular include dependencies.\n\nChoreographerFilter and ChoreographerThread are done in the same manner.",
      "revId": "a84d30477b48cdcdcffcd0626850f820fc132c84",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}