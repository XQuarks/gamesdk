{
  "comments": [
    {
      "key": {
        "uuid": "2f855d38_a09ba8a5",
        "filename": "samples/common/src/Thread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1498014
      },
      "writtenOn": "2020-01-21T14:14:15Z",
      "side": 1,
      "message": "These statics always make me anxious ðŸ˜„ \nI guess it\u0027s fine because it\u0027s initialised on demand and destroyed at program exit - in which case running threads will also be destroyed so no risk of a ThreadManager method trying to be used after the singleton was destroyed already?\nFlagging this to be sure you\u0027re 100% confident with this implementation (even if this is a sample app, so risk/impact are low).",
      "revId": "e45c8c1b882daa58ffe9417e8d253585ddb1c194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c55c08da_6574239a",
        "filename": "samples/common/src/Thread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2020-01-22T11:40:00Z",
      "side": 1,
      "message": "I understand your concern and have added a comment in the header to say that this thread manager code isn\u0027t meant for production use.",
      "parentUuid": "2f855d38_a09ba8a5",
      "revId": "e45c8c1b882daa58ffe9417e8d253585ddb1c194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bf3d8c8_a4c1c325",
        "filename": "samples/common/src/Thread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1498014
      },
      "writtenOn": "2020-01-21T14:14:15Z",
      "side": 1,
      "message": "nit: this could be made const it seems - though this is probably not super relevant or useful in our case so marking this as resolved already.",
      "revId": "e45c8c1b882daa58ffe9417e8d253585ddb1c194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac3f6aaf_758a699e",
        "filename": "samples/common/src/Thread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2020-01-22T11:40:00Z",
      "side": 1,
      "message": "The mutex is mutated, so it can\u0027t be const.",
      "parentUuid": "0bf3d8c8_a4c1c325",
      "revId": "e45c8c1b882daa58ffe9417e8d253585ddb1c194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "995e2cae_c2fe0a8e",
        "filename": "src/swappy/common/ChoreographerThread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 1498014
      },
      "writtenOn": "2020-01-21T14:14:15Z",
      "side": 1,
      "message": "nit: space before Thread",
      "revId": "e45c8c1b882daa58ffe9417e8d253585ddb1c194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "126155f1_048e06af",
        "filename": "src/swappy/common/ChoreographerThread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2020-01-22T11:40:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "995e2cae_c2fe0a8e",
      "revId": "e45c8c1b882daa58ffe9417e8d253585ddb1c194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04dd315c_b97c1a95",
        "filename": "src/swappy/common/Thread.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2020-01-22T21:09:19Z",
      "side": 1,
      "message": "why not class Thread : public ThreadImpl {} ?",
      "revId": "e45c8c1b882daa58ffe9417e8d253585ddb1c194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}