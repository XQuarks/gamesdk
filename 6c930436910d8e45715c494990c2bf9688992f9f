{
  "comments": [
    {
      "key": {
        "uuid": "e8f3ab53_e3057b47",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2020-03-23T17:35:53Z",
      "side": 1,
      "message": "Not sure if this question will make sense - but does the Default Texture have to conform to the file format of an ASTC texture in order for it to be interpreted properly on the GPU? The VK_Format for example specifies the size of the blocks used in the compression, does the raw data need to be in those block sizes?\n\nI think this also implies a more general question - should we have a default texture for specific types of textures? for example the default texture of a normal texture should probably be either (0, 0, 0, o) or (0, 0, 255, 0) which specifies an up vector?",
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ed54ae0_6821dee0",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1336478
      },
      "writtenOn": "2020-03-23T17:42:48Z",
      "side": 1,
      "message": "I think this \"default\" texture is a flag of the texture we are loading is missing or has error upon loading process, but this question is a really good one to consider. Also I am no sure what you mean by (0, 0, 0, o) or (0, 0, 255, 0), currently the default texture is a pink pixel afaik.",
      "parentUuid": "e8f3ab53_e3057b47",
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35edaa30_d39c31b8",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1572660
      },
      "writtenOn": "2020-03-23T17:48:52Z",
      "side": 1,
      "message": "To Omar\u0027s first question, yes if the VkFormat is ASTC the raw data should conform to that, and I don\u0027t know what the behavior would be using an uncompressed default texture there. To this end, I was considering setting a default param for the constructor\u0027s VkFormat, maybe just like `VK_FORMAT_R8G8B8A8_SRGB`, since right now if it\u0027s an ASTC file the format is ignored anyways (the VkFormat is defined by the ASTC header, which is I would argue the most reliable way to set this), which would allow us to have a default uncompressed non-ASTC format to fall back to in case of a missing ASTC texture, since the ASTC texture could then be created without an explicit ASTC VkFormat constructor param.\n\nTo the second question, I think that that\u0027s valid, but I\u0027m not sure that that\u0027s something that we should be doing in the Texture class? I think of what we have in Material for the default texture, which might be a better model (and I think is a bit beyond the scope of this CL).",
      "parentUuid": "2ed54ae0_6821dee0",
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "940f77ad_9cc8a480",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2020-03-23T17:53:34Z",
      "side": 1,
      "message": "I guess the word \"default\" in this context is a little vague - is the job of the default texture here to draw your attention to something that is missing? And if so how would you do that with a non-color data texture like a normal/bump/Metallic/Shine texture - or should that all be the job of the Material class\n\nI think those probably are questions that are a bit out of the scope of this CL, just things to keep in mind ;) \n\nThe (0, 0, 0, 0) and (0, 0, 255, 0) where just examples of what a \"default\" texture for a normal map\u0027s single pixel RGBA values could be, sorry if that wasn\u0027t clear!",
      "parentUuid": "2ed54ae0_6821dee0",
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a0abf4d_3c21d0fc",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1572660
      },
      "writtenOn": "2020-03-23T17:56:55Z",
      "side": 1,
      "message": "Hmm I guess that\u0027s fair; basically I just refactored out the part of the code that deals with like invalid conditions or a missing file; I can rename this like LoadFallbackData() to be more clear that it\u0027s not like \"loading\" from anything and  it\u0027s distinct from the Default Texture in Material?",
      "parentUuid": "940f77ad_9cc8a480",
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9903d651_52031489",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2020-03-23T18:21:16Z",
      "side": 1,
      "message": "Yea that sounds good to me!",
      "parentUuid": "2a0abf4d_3c21d0fc",
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "651bce92_6cdb8946",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1336478
      },
      "writtenOn": "2020-03-23T17:26:51Z",
      "side": 1,
      "message": "Does this mean that we are not making mip maps on compressed textures?",
      "range": {
        "startLine": 125,
        "startChar": 4,
        "endLine": 125,
        "endChar": 20
      },
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2dfcf7e_95aee26c",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1572660
      },
      "writtenOn": "2020-03-23T17:30:48Z",
      "side": 1,
      "message": "Good question; we can\u0027t directly create mipmaps in code with compressed formats in general, to my knowledge. To enable mipmaps, we need to generate mipmaps offline and then compress those individually to ASTC, and finally include these manually as mipmaps for a Texture. I envision this to be part of the work in Chef, and will add support for mipmaps in Texture when we get Chef end set up.",
      "parentUuid": "651bce92_6cdb8946",
      "range": {
        "startLine": 125,
        "startChar": 4,
        "endLine": 125,
        "endChar": 20
      },
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}