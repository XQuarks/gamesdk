{
  "comments": [
    {
      "key": {
        "uuid": "e8f3ab53_e3057b47",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2020-03-23T17:35:53Z",
      "side": 1,
      "message": "Not sure if this question will make sense - but does the Default Texture have to conform to the file format of an ASTC texture in order for it to be interpreted properly on the GPU? The VK_Format for example specifies the size of the blocks used in the compression, does the raw data need to be in those block sizes?\n\nI think this also implies a more general question - should we have a default texture for specific types of textures? for example the default texture of a normal texture should probably be either (0, 0, 0, o) or (0, 0, 255, 0) which specifies an up vector?",
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "651bce92_6cdb8946",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1336478
      },
      "writtenOn": "2020-03-23T17:26:51Z",
      "side": 1,
      "message": "Does this mean that we are not making mip maps on compressed textures?",
      "range": {
        "startLine": 125,
        "startChar": 4,
        "endLine": 125,
        "endChar": 20
      },
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2dfcf7e_95aee26c",
        "filename": "bender/bender-base/app/src/main/jni/texture.cc",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1572660
      },
      "writtenOn": "2020-03-23T17:30:48Z",
      "side": 1,
      "message": "Good question; we can\u0027t directly create mipmaps in code with compressed formats in general, to my knowledge. To enable mipmaps, we need to generate mipmaps offline and then compress those individually to ASTC, and finally include these manually as mipmaps for a Texture. I envision this to be part of the work in Chef, and will add support for mipmaps in Texture when we get Chef end set up.",
      "parentUuid": "651bce92_6cdb8946",
      "range": {
        "startLine": 125,
        "startChar": 4,
        "endLine": 125,
        "endChar": 20
      },
      "revId": "6c930436910d8e45715c494990c2bf9688992f9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}