{
  "comments": [
    {
      "key": {
        "uuid": "5e1f8d91_976baa21",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "I don\u0027t think we need the \u0027ns\u0027 if this is stored as a std::chrono::nanoseconds.\n\nEdit: After looking further, this seems to be because this is to distinguish between this and a swap interval which is presumably an integer number of periods. If that\u0027s the case, maybe a better name for this class of variables (both member and local) would be mSwapDuration. I think you may have even noticed this, since you called your new method \u0027isSameDuration\u0027 ;-)",
      "range": {
        "startLine": 357,
        "startChar": 15,
        "endLine": 357,
        "endChar": 29
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "101ec9ad_3bd5f1a7",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 13
      },
      "lineNbr": 434,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "Maybe mSwapDuration.store(...) since you loaded above",
      "range": {
        "startLine": 434,
        "startChar": 8,
        "endLine": 434,
        "endChar": 21
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bedc2de2_e773b9c2",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 13
      },
      "lineNbr": 452,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "Tiny nit: is this space consistent with clang-format or whatever?",
      "range": {
        "startLine": 452,
        "startChar": 11,
        "endLine": 452,
        "endChar": 12
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42f21a7c_6bd56a2a",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 13
      },
      "lineNbr": 505,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "This is a little tough to read; could we split it into a few named variables for clarity?",
      "range": {
        "startLine": 502,
        "startChar": 8,
        "endLine": 505,
        "endChar": 81
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea14c8bf_70a175ee",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 13
      },
      "lineNbr": 506,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "Not this change, but as a drive-by, is this shadowing a member or should we drop the prefix?",
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9079f55_86931b83",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 13
      },
      "lineNbr": 512,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "Another drive-by: can we clang-format?",
      "range": {
        "startLine": 512,
        "startChar": 29,
        "endLine": 512,
        "endChar": 31
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3dd9b9d_923a9b2c",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 13
      },
      "lineNbr": 547,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "Maybe \u0027isWithinMargin\u0027, since you\u0027re not actually checking for equality?",
      "range": {
        "startLine": 547,
        "startChar": 19,
        "endLine": 547,
        "endChar": 33
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55952bdf_0533ff15",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 13
      },
      "lineNbr": 547,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "\u0027Interval\u0027, but actually, there\u0027s nothing specific to swap intervals here, so I might just say \u0027a\u0027 and \u0027b\u0027 like you might do for a typical comparison function.",
      "range": {
        "startLine": 547,
        "startChar": 46,
        "endLine": 547,
        "endChar": 60
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d70d0287_4eec06db",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 13
      },
      "lineNbr": 551,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "If we have C++17, you could just use abs:\n\n  return std::abs(a - b) \u003c MARGIN\n\nOtherwise, you could use .count()\n\n  return std::abs((a - b).count()) \u003c MARGIN.count()",
      "range": {
        "startLine": 550,
        "startChar": 0,
        "endLine": 551,
        "endChar": 19
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "392e2816_8ce2fd0a",
        "filename": "src/swappy/common/SwappyCommon.h",
        "patchSetId": 13
      },
      "lineNbr": 224,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "Nit: I\u0027d call this mMutex since you grab a lock around a mutex (not a lock around a lock)",
      "range": {
        "startLine": 224,
        "startChar": 15,
        "endLine": 224,
        "endChar": 20
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c52c8b6_38804b19",
        "filename": "src/swappy/common/SwappyDisplayManager.h",
        "patchSetId": 13
      },
      "lineNbr": 30,
      "author": {
        "id": 1043625
      },
      "writtenOn": "2020-05-01T21:23:19Z",
      "side": 1,
      "message": "I see what you were doing here, matching the snake case, but I\u0027d probably leave the comments here but use camel case so it doesn\u0027t look like a conflict in client code:\n\n  int sdkInt; // Build.VERSION.SDK_INT\n  int previewSdkInt; // Build.VERSION.PREVIEW_SDK_INT",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 57
      },
      "revId": "5f72c53c60ab5a61b2feb9477942a6d324114415",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}