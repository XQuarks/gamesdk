{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "72e3feba_e7e6a4b3",
        "filename": "games-performance-tuner/http_backend/predict_quality_levels.cpp",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1568678
      },
      "writtenOn": "2023-06-13T18:18:17Z",
      "side": 1,
      "message": "The expected_frame_time string will be in format \"3.00001s\", does atof here strip the s?",
      "range": {
        "startLine": 94,
        "startChar": 7,
        "endLine": 94,
        "endChar": 51
      },
      "revId": "ae832bf386209ec40fdf5ffa831f7e1c50018b62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c63a2049_51a3728c",
        "filename": "games-performance-tuner/http_backend/predict_quality_levels.cpp",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1970910
      },
      "writtenOn": "2023-06-14T09:42:34Z",
      "side": 1,
      "message": "Yeah. The spec for \"atof\" mentions it: \"Then it takes as many characters as possible to form a valid floating-point representation and converts them to a floating-point value\" from https://en.cppreference.com/w/c/string/byte/atof",
      "parentUuid": "72e3feba_e7e6a4b3",
      "range": {
        "startLine": 94,
        "startChar": 7,
        "endLine": 94,
        "endChar": 51
      },
      "revId": "ae832bf386209ec40fdf5ffa831f7e1c50018b62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53445744_c4b9f70c",
        "filename": "games-performance-tuner/http_backend/predict_quality_levels.cpp",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1940280
      },
      "writtenOn": "2023-06-14T10:49:56Z",
      "side": 1,
      "message": "1.0f is arbitrary but chosen because it would be ridiculous for a frame to take more than 1 second, right? so this is just a check to make sure the value is sane?",
      "revId": "ae832bf386209ec40fdf5ffa831f7e1c50018b62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a7d377f_d88f9488",
        "filename": "games-performance-tuner/proto/protobuf_util.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1940280
      },
      "writtenOn": "2023-06-14T10:30:42Z",
      "side": 1,
      "message": "Same here, sizeof(TuningFork_CProtobufSerialization*) is wrong",
      "revId": "ae832bf386209ec40fdf5ffa831f7e1c50018b62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1e30018_d7892aa1",
        "filename": "games-performance-tuner/proto/protobuf_util.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1940280
      },
      "writtenOn": "2023-06-14T10:42:55Z",
      "side": 1,
      "message": "The allocation and free of this is all handled internally in .cpp files so you could use new/delete if you wanted to, right? \nIn that case consider using new/delete.\n\nAlso malloc can return null. I don\u0027t care if you handle that case or not as it\u0027s very rare and it\u0027s not clear how we would handle it if it did happen.",
      "revId": "ae832bf386209ec40fdf5ffa831f7e1c50018b62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebe9b7c2_19a98d51",
        "filename": "games-performance-tuner/proto/protobuf_util.cpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1940280
      },
      "writtenOn": "2023-06-14T10:27:07Z",
      "side": 1,
      "message": "should be sizeof(uint32_t) not sizeof(uint32_t*)",
      "revId": "ae832bf386209ec40fdf5ffa831f7e1c50018b62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}