#ifndef AGDC_ANCER_VKDEBUGPRINT_H_
#define AGDC_ANCER_VKDEBUGPRINT_H_

#include <cstdio>

#include "vulkan_base.h"
#include "../util/Log.hpp"

namespace ancer {
namespace vulkan {

static const char * debug_print_tabs = "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t";

#define VK_ENUM_START(NAME) \
  static void NAME##_debug_print(const char * name, uint32_t depth, \
                                 const NAME & v) { \
    const char * value =
#define VK_ENUM_VALUE(VALUE) \
    (v == VALUE) ? #VALUE :
#define VK_ENUM_END \
    "unknown"; \
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = %s", depth, debug_print_tabs, \
           name, value); \
  }

VK_ENUM_START(VkPipelineCacheHeaderVersion)
  VK_ENUM_VALUE(VK_PIPELINE_CACHE_HEADER_VERSION_ONE)
VK_ENUM_END

VK_ENUM_START(VkResult)
  VK_ENUM_VALUE(VK_SUCCESS)
  VK_ENUM_VALUE(VK_NOT_READY)
  VK_ENUM_VALUE(VK_TIMEOUT)
  VK_ENUM_VALUE(VK_EVENT_SET)
  VK_ENUM_VALUE(VK_EVENT_RESET)
  VK_ENUM_VALUE(VK_INCOMPLETE)
  VK_ENUM_VALUE(VK_ERROR_OUT_OF_HOST_MEMORY)
  VK_ENUM_VALUE(VK_ERROR_OUT_OF_DEVICE_MEMORY)
  VK_ENUM_VALUE(VK_ERROR_INITIALIZATION_FAILED)
  VK_ENUM_VALUE(VK_ERROR_DEVICE_LOST)
  VK_ENUM_VALUE(VK_ERROR_MEMORY_MAP_FAILED)
  VK_ENUM_VALUE(VK_ERROR_LAYER_NOT_PRESENT)
  VK_ENUM_VALUE(VK_ERROR_EXTENSION_NOT_PRESENT)
  VK_ENUM_VALUE(VK_ERROR_FEATURE_NOT_PRESENT)
  VK_ENUM_VALUE(VK_ERROR_INCOMPATIBLE_DRIVER)
  VK_ENUM_VALUE(VK_ERROR_TOO_MANY_OBJECTS)
  VK_ENUM_VALUE(VK_ERROR_FORMAT_NOT_SUPPORTED)
  VK_ENUM_VALUE(VK_ERROR_FRAGMENTED_POOL)
  VK_ENUM_VALUE(VK_ERROR_OUT_OF_POOL_MEMORY)
  VK_ENUM_VALUE(VK_ERROR_INVALID_EXTERNAL_HANDLE)
  VK_ENUM_VALUE(VK_ERROR_SURFACE_LOST_KHR)
  VK_ENUM_VALUE(VK_ERROR_NATIVE_WINDOW_IN_USE_KHR)
  VK_ENUM_VALUE(VK_SUBOPTIMAL_KHR)
  VK_ENUM_VALUE(VK_ERROR_OUT_OF_DATE_KHR)
  VK_ENUM_VALUE(VK_ERROR_INCOMPATIBLE_DISPLAY_KHR)
  VK_ENUM_VALUE(VK_ERROR_VALIDATION_FAILED_EXT)
  VK_ENUM_VALUE(VK_ERROR_INVALID_SHADER_NV)
  VK_ENUM_VALUE(VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT)
  VK_ENUM_VALUE(VK_ERROR_FRAGMENTATION_EXT)
  VK_ENUM_VALUE(VK_ERROR_NOT_PERMITTED_EXT)
  VK_ENUM_VALUE(VK_ERROR_INVALID_DEVICE_ADDRESS_EXT)
  VK_ENUM_VALUE(VK_ERROR_OUT_OF_POOL_MEMORY_KHR)
  VK_ENUM_VALUE(VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR)
VK_ENUM_END

VK_ENUM_START(VkStructureType)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_APPLICATION_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SUBMIT_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_SPARSE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_FENCE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EVENT_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_BARRIER)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PRESENT_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_HDR_METADATA_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_GEOMETRY_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR)
  VK_ENUM_VALUE(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR)
VK_ENUM_END

VK_ENUM_START(VkSystemAllocationScope)
  VK_ENUM_VALUE(VK_SYSTEM_ALLOCATION_SCOPE_COMMAND)
  VK_ENUM_VALUE(VK_SYSTEM_ALLOCATION_SCOPE_OBJECT)
  VK_ENUM_VALUE(VK_SYSTEM_ALLOCATION_SCOPE_CACHE)
  VK_ENUM_VALUE(VK_SYSTEM_ALLOCATION_SCOPE_DEVICE)
  VK_ENUM_VALUE(VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE)
VK_ENUM_END

VK_ENUM_START(VkInternalAllocationType)
  VK_ENUM_VALUE(VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE)
VK_ENUM_END

VK_ENUM_START(VkFormat)
  VK_ENUM_VALUE(VK_FORMAT_UNDEFINED)
  VK_ENUM_VALUE(VK_FORMAT_R4G4_UNORM_PACK8)
  VK_ENUM_VALUE(VK_FORMAT_R4G4B4A4_UNORM_PACK16)
  VK_ENUM_VALUE(VK_FORMAT_B4G4R4A4_UNORM_PACK16)
  VK_ENUM_VALUE(VK_FORMAT_R5G6B5_UNORM_PACK16)
  VK_ENUM_VALUE(VK_FORMAT_B5G6R5_UNORM_PACK16)
  VK_ENUM_VALUE(VK_FORMAT_R5G5B5A1_UNORM_PACK16)
  VK_ENUM_VALUE(VK_FORMAT_B5G5R5A1_UNORM_PACK16)
  VK_ENUM_VALUE(VK_FORMAT_A1R5G5B5_UNORM_PACK16)
  VK_ENUM_VALUE(VK_FORMAT_R8_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_R8_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_R8_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_R8_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_R8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R8_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R8_SRGB)
  VK_ENUM_VALUE(VK_FORMAT_R8G8_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_R8G8_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_R8G8_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_R8G8_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_R8G8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R8G8_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R8G8_SRGB)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8_SRGB)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8_SINT)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8_SRGB)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8A8_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8A8_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8A8_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8A8_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8A8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8A8_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R8G8B8A8_SRGB)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8A8_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8A8_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8A8_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8A8_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8A8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8A8_SINT)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8A8_SRGB)
  VK_ENUM_VALUE(VK_FORMAT_A8B8G8R8_UNORM_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A8B8G8R8_SNORM_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A8B8G8R8_USCALED_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A8B8G8R8_SSCALED_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A8B8G8R8_UINT_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A8B8G8R8_SINT_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A8B8G8R8_SRGB_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2R10G10B10_UNORM_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2R10G10B10_SNORM_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2R10G10B10_USCALED_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2R10G10B10_SSCALED_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2R10G10B10_UINT_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2R10G10B10_SINT_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2B10G10R10_UNORM_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2B10G10R10_SNORM_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2B10G10R10_USCALED_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2B10G10R10_SSCALED_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2B10G10R10_UINT_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_A2B10G10R10_SINT_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_R16_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_R16_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_R16_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_R16_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_R16_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R16_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R16_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R16G16_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_R16G16_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_R16G16_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_R16G16_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_R16G16_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R16G16_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R16G16_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16A16_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16A16_SNORM)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16A16_USCALED)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16A16_SSCALED)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16A16_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16A16_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R16G16B16A16_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R32_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R32_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R32_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R32G32_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R32G32_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R32G32_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R32G32B32_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R32G32B32_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R32G32B32_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R32G32B32A32_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R32G32B32A32_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R32G32B32A32_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R64_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R64_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R64_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R64G64_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R64G64_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R64G64_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R64G64B64_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R64G64B64_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R64G64B64_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_R64G64B64A64_UINT)
  VK_ENUM_VALUE(VK_FORMAT_R64G64B64A64_SINT)
  VK_ENUM_VALUE(VK_FORMAT_R64G64B64A64_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_B10G11R11_UFLOAT_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_E5B9G9R9_UFLOAT_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_D16_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_X8_D24_UNORM_PACK32)
  VK_ENUM_VALUE(VK_FORMAT_D32_SFLOAT)
  VK_ENUM_VALUE(VK_FORMAT_S8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_D16_UNORM_S8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_D24_UNORM_S8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_D32_SFLOAT_S8_UINT)
  VK_ENUM_VALUE(VK_FORMAT_BC1_RGB_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC1_RGB_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC1_RGBA_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC1_RGBA_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC2_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC2_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC3_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC3_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC4_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC4_SNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC5_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC5_SNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC6H_UFLOAT_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC6H_SFLOAT_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC7_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_BC7_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_EAC_R11_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_EAC_R11_SNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_EAC_R11G11_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_EAC_R11G11_SNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_4x4_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_4x4_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_5x4_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_5x4_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_5x5_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_5x5_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_6x5_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_6x5_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_6x6_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_6x6_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_8x5_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_8x5_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_8x6_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_8x6_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_8x8_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_8x8_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_10x5_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_10x5_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_10x6_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_10x6_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_10x8_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_10x8_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_10x10_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_10x10_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_12x10_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_12x10_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_12x12_UNORM_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_ASTC_12x12_SRGB_BLOCK)
  VK_ENUM_VALUE(VK_FORMAT_G8B8G8R8_422_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8G8_422_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8R8_2PLANE_420_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8R8_2PLANE_422_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_R10X6_UNORM_PACK16)
  VK_ENUM_VALUE(VK_FORMAT_R10X6G10X6_UNORM_2PACK16)
  VK_ENUM_VALUE(VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16)
  VK_ENUM_VALUE(VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_R12X4_UNORM_PACK16)
  VK_ENUM_VALUE(VK_FORMAT_R12X4G12X4_UNORM_2PACK16)
  VK_ENUM_VALUE(VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16)
  VK_ENUM_VALUE(VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16)
  VK_ENUM_VALUE(VK_FORMAT_G16B16G16R16_422_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_B16G16R16G16_422_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16R16_2PLANE_420_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16R16_2PLANE_422_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM)
  VK_ENUM_VALUE(VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG)
  VK_ENUM_VALUE(VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG)
  VK_ENUM_VALUE(VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG)
  VK_ENUM_VALUE(VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG)
  VK_ENUM_VALUE(VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG)
  VK_ENUM_VALUE(VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG)
  VK_ENUM_VALUE(VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG)
  VK_ENUM_VALUE(VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG)
  VK_ENUM_VALUE(VK_FORMAT_G8B8G8R8_422_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_B8G8R8G8_422_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_R10X6_UNORM_PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_R12X4_UNORM_PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G16B16G16R16_422_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_B16G16R16G16_422_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR)
  VK_ENUM_VALUE(VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR)
VK_ENUM_END

VK_ENUM_START(VkImageType)
  VK_ENUM_VALUE(VK_IMAGE_TYPE_1D)
  VK_ENUM_VALUE(VK_IMAGE_TYPE_2D)
  VK_ENUM_VALUE(VK_IMAGE_TYPE_3D)
VK_ENUM_END

VK_ENUM_START(VkImageTiling)
  VK_ENUM_VALUE(VK_IMAGE_TILING_OPTIMAL)
  VK_ENUM_VALUE(VK_IMAGE_TILING_LINEAR)
  VK_ENUM_VALUE(VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT)
VK_ENUM_END

VK_ENUM_START(VkPhysicalDeviceType)
  VK_ENUM_VALUE(VK_PHYSICAL_DEVICE_TYPE_OTHER)
  VK_ENUM_VALUE(VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU)
  VK_ENUM_VALUE(VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU)
  VK_ENUM_VALUE(VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU)
  VK_ENUM_VALUE(VK_PHYSICAL_DEVICE_TYPE_CPU)
VK_ENUM_END

VK_ENUM_START(VkQueryType)
  VK_ENUM_VALUE(VK_QUERY_TYPE_OCCLUSION)
  VK_ENUM_VALUE(VK_QUERY_TYPE_PIPELINE_STATISTICS)
  VK_ENUM_VALUE(VK_QUERY_TYPE_TIMESTAMP)
  VK_ENUM_VALUE(VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT)
  VK_ENUM_VALUE(VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV)
VK_ENUM_END

VK_ENUM_START(VkSharingMode)
  VK_ENUM_VALUE(VK_SHARING_MODE_EXCLUSIVE)
  VK_ENUM_VALUE(VK_SHARING_MODE_CONCURRENT)
VK_ENUM_END

VK_ENUM_START(VkImageLayout)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_UNDEFINED)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_GENERAL)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_PREINITIALIZED)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_PRESENT_SRC_KHR)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR)
  VK_ENUM_VALUE(VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR)
VK_ENUM_END

VK_ENUM_START(VkImageViewType)
  VK_ENUM_VALUE(VK_IMAGE_VIEW_TYPE_1D)
  VK_ENUM_VALUE(VK_IMAGE_VIEW_TYPE_2D)
  VK_ENUM_VALUE(VK_IMAGE_VIEW_TYPE_3D)
  VK_ENUM_VALUE(VK_IMAGE_VIEW_TYPE_CUBE)
  VK_ENUM_VALUE(VK_IMAGE_VIEW_TYPE_1D_ARRAY)
  VK_ENUM_VALUE(VK_IMAGE_VIEW_TYPE_2D_ARRAY)
  VK_ENUM_VALUE(VK_IMAGE_VIEW_TYPE_CUBE_ARRAY)
VK_ENUM_END

VK_ENUM_START(VkComponentSwizzle)
  VK_ENUM_VALUE(VK_COMPONENT_SWIZZLE_IDENTITY)
  VK_ENUM_VALUE(VK_COMPONENT_SWIZZLE_ZERO)
  VK_ENUM_VALUE(VK_COMPONENT_SWIZZLE_ONE)
  VK_ENUM_VALUE(VK_COMPONENT_SWIZZLE_R)
  VK_ENUM_VALUE(VK_COMPONENT_SWIZZLE_G)
  VK_ENUM_VALUE(VK_COMPONENT_SWIZZLE_B)
  VK_ENUM_VALUE(VK_COMPONENT_SWIZZLE_A)
VK_ENUM_END

VK_ENUM_START(VkVertexInputRate)
  VK_ENUM_VALUE(VK_VERTEX_INPUT_RATE_VERTEX)
  VK_ENUM_VALUE(VK_VERTEX_INPUT_RATE_INSTANCE)
VK_ENUM_END

VK_ENUM_START(VkPrimitiveTopology)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_POINT_LIST)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_LINE_LIST)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_LINE_STRIP)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY)
  VK_ENUM_VALUE(VK_PRIMITIVE_TOPOLOGY_PATCH_LIST)
VK_ENUM_END

VK_ENUM_START(VkPolygonMode)
  VK_ENUM_VALUE(VK_POLYGON_MODE_FILL)
  VK_ENUM_VALUE(VK_POLYGON_MODE_LINE)
  VK_ENUM_VALUE(VK_POLYGON_MODE_POINT)
  VK_ENUM_VALUE(VK_POLYGON_MODE_FILL_RECTANGLE_NV)
VK_ENUM_END

VK_ENUM_START(VkFrontFace)
  VK_ENUM_VALUE(VK_FRONT_FACE_COUNTER_CLOCKWISE)
  VK_ENUM_VALUE(VK_FRONT_FACE_CLOCKWISE)
VK_ENUM_END

VK_ENUM_START(VkCompareOp)
  VK_ENUM_VALUE(VK_COMPARE_OP_NEVER)
  VK_ENUM_VALUE(VK_COMPARE_OP_LESS)
  VK_ENUM_VALUE(VK_COMPARE_OP_EQUAL)
  VK_ENUM_VALUE(VK_COMPARE_OP_LESS_OR_EQUAL)
  VK_ENUM_VALUE(VK_COMPARE_OP_GREATER)
  VK_ENUM_VALUE(VK_COMPARE_OP_NOT_EQUAL)
  VK_ENUM_VALUE(VK_COMPARE_OP_GREATER_OR_EQUAL)
  VK_ENUM_VALUE(VK_COMPARE_OP_ALWAYS)
VK_ENUM_END

VK_ENUM_START(VkStencilOp)
  VK_ENUM_VALUE(VK_STENCIL_OP_KEEP)
  VK_ENUM_VALUE(VK_STENCIL_OP_ZERO)
  VK_ENUM_VALUE(VK_STENCIL_OP_REPLACE)
  VK_ENUM_VALUE(VK_STENCIL_OP_INCREMENT_AND_CLAMP)
  VK_ENUM_VALUE(VK_STENCIL_OP_DECREMENT_AND_CLAMP)
  VK_ENUM_VALUE(VK_STENCIL_OP_INVERT)
  VK_ENUM_VALUE(VK_STENCIL_OP_INCREMENT_AND_WRAP)
  VK_ENUM_VALUE(VK_STENCIL_OP_DECREMENT_AND_WRAP)
VK_ENUM_END

VK_ENUM_START(VkLogicOp)
  VK_ENUM_VALUE(VK_LOGIC_OP_CLEAR)
  VK_ENUM_VALUE(VK_LOGIC_OP_AND)
  VK_ENUM_VALUE(VK_LOGIC_OP_AND_REVERSE)
  VK_ENUM_VALUE(VK_LOGIC_OP_COPY)
  VK_ENUM_VALUE(VK_LOGIC_OP_AND_INVERTED)
  VK_ENUM_VALUE(VK_LOGIC_OP_NO_OP)
  VK_ENUM_VALUE(VK_LOGIC_OP_XOR)
  VK_ENUM_VALUE(VK_LOGIC_OP_OR)
  VK_ENUM_VALUE(VK_LOGIC_OP_NOR)
  VK_ENUM_VALUE(VK_LOGIC_OP_EQUIVALENT)
  VK_ENUM_VALUE(VK_LOGIC_OP_INVERT)
  VK_ENUM_VALUE(VK_LOGIC_OP_OR_REVERSE)
  VK_ENUM_VALUE(VK_LOGIC_OP_COPY_INVERTED)
  VK_ENUM_VALUE(VK_LOGIC_OP_OR_INVERTED)
  VK_ENUM_VALUE(VK_LOGIC_OP_NAND)
  VK_ENUM_VALUE(VK_LOGIC_OP_SET)
VK_ENUM_END

VK_ENUM_START(VkBlendFactor)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ZERO)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ONE)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_SRC_COLOR)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_DST_COLOR)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_SRC_ALPHA)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_DST_ALPHA)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_CONSTANT_COLOR)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_CONSTANT_ALPHA)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_SRC_ALPHA_SATURATE)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_SRC1_COLOR)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_SRC1_ALPHA)
  VK_ENUM_VALUE(VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA)
VK_ENUM_END

VK_ENUM_START(VkBlendOp)
  VK_ENUM_VALUE(VK_BLEND_OP_ADD)
  VK_ENUM_VALUE(VK_BLEND_OP_SUBTRACT)
  VK_ENUM_VALUE(VK_BLEND_OP_REVERSE_SUBTRACT)
  VK_ENUM_VALUE(VK_BLEND_OP_MIN)
  VK_ENUM_VALUE(VK_BLEND_OP_MAX)
  VK_ENUM_VALUE(VK_BLEND_OP_ZERO_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_SRC_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_DST_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_SRC_OVER_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_DST_OVER_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_SRC_IN_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_DST_IN_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_SRC_OUT_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_DST_OUT_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_SRC_ATOP_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_DST_ATOP_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_XOR_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_MULTIPLY_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_SCREEN_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_OVERLAY_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_DARKEN_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_LIGHTEN_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_COLORDODGE_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_COLORBURN_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_HARDLIGHT_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_SOFTLIGHT_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_DIFFERENCE_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_EXCLUSION_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_INVERT_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_INVERT_RGB_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_LINEARDODGE_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_LINEARBURN_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_VIVIDLIGHT_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_LINEARLIGHT_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_PINLIGHT_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_HARDMIX_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_HSL_HUE_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_HSL_SATURATION_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_HSL_COLOR_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_HSL_LUMINOSITY_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_PLUS_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_PLUS_CLAMPED_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_PLUS_DARKER_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_MINUS_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_MINUS_CLAMPED_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_CONTRAST_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_INVERT_OVG_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_RED_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_GREEN_EXT)
  VK_ENUM_VALUE(VK_BLEND_OP_BLUE_EXT)
VK_ENUM_END

VK_ENUM_START(VkDynamicState)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_VIEWPORT)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_SCISSOR)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_LINE_WIDTH)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_DEPTH_BIAS)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_BLEND_CONSTANTS)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_DEPTH_BOUNDS)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_STENCIL_WRITE_MASK)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_STENCIL_REFERENCE)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV)
  VK_ENUM_VALUE(VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV)
VK_ENUM_END

VK_ENUM_START(VkFilter)
  VK_ENUM_VALUE(VK_FILTER_NEAREST)
  VK_ENUM_VALUE(VK_FILTER_LINEAR)
  VK_ENUM_VALUE(VK_FILTER_CUBIC_IMG)
  VK_ENUM_VALUE(VK_FILTER_CUBIC_EXT)
VK_ENUM_END

VK_ENUM_START(VkSamplerMipmapMode)
  VK_ENUM_VALUE(VK_SAMPLER_MIPMAP_MODE_NEAREST)
  VK_ENUM_VALUE(VK_SAMPLER_MIPMAP_MODE_LINEAR)
VK_ENUM_END

VK_ENUM_START(VkSamplerAddressMode)
  VK_ENUM_VALUE(VK_SAMPLER_ADDRESS_MODE_REPEAT)
  VK_ENUM_VALUE(VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT)
  VK_ENUM_VALUE(VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE)
  VK_ENUM_VALUE(VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER)
  VK_ENUM_VALUE(VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE)
VK_ENUM_END

VK_ENUM_START(VkBorderColor)
  VK_ENUM_VALUE(VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK)
  VK_ENUM_VALUE(VK_BORDER_COLOR_INT_TRANSPARENT_BLACK)
  VK_ENUM_VALUE(VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK)
  VK_ENUM_VALUE(VK_BORDER_COLOR_INT_OPAQUE_BLACK)
  VK_ENUM_VALUE(VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE)
  VK_ENUM_VALUE(VK_BORDER_COLOR_INT_OPAQUE_WHITE)
VK_ENUM_END

VK_ENUM_START(VkDescriptorType)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_SAMPLER)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_STORAGE_IMAGE)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT)
  VK_ENUM_VALUE(VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV)
VK_ENUM_END

VK_ENUM_START(VkAttachmentLoadOp)
  VK_ENUM_VALUE(VK_ATTACHMENT_LOAD_OP_LOAD)
  VK_ENUM_VALUE(VK_ATTACHMENT_LOAD_OP_CLEAR)
  VK_ENUM_VALUE(VK_ATTACHMENT_LOAD_OP_DONT_CARE)
VK_ENUM_END

VK_ENUM_START(VkAttachmentStoreOp)
  VK_ENUM_VALUE(VK_ATTACHMENT_STORE_OP_STORE)
  VK_ENUM_VALUE(VK_ATTACHMENT_STORE_OP_DONT_CARE)
VK_ENUM_END

VK_ENUM_START(VkPipelineBindPoint)
  VK_ENUM_VALUE(VK_PIPELINE_BIND_POINT_GRAPHICS)
  VK_ENUM_VALUE(VK_PIPELINE_BIND_POINT_COMPUTE)
  VK_ENUM_VALUE(VK_PIPELINE_BIND_POINT_RAY_TRACING_NV)
VK_ENUM_END

VK_ENUM_START(VkCommandBufferLevel)
  VK_ENUM_VALUE(VK_COMMAND_BUFFER_LEVEL_PRIMARY)
  VK_ENUM_VALUE(VK_COMMAND_BUFFER_LEVEL_SECONDARY)
VK_ENUM_END

VK_ENUM_START(VkIndexType)
  VK_ENUM_VALUE(VK_INDEX_TYPE_UINT16)
  VK_ENUM_VALUE(VK_INDEX_TYPE_UINT32)
  VK_ENUM_VALUE(VK_INDEX_TYPE_NONE_NV)
VK_ENUM_END

VK_ENUM_START(VkSubpassContents)
  VK_ENUM_VALUE(VK_SUBPASS_CONTENTS_INLINE)
  VK_ENUM_VALUE(VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS)
VK_ENUM_END

VK_ENUM_START(VkObjectType)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_UNKNOWN)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_INSTANCE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_PHYSICAL_DEVICE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DEVICE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_QUEUE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_SEMAPHORE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_COMMAND_BUFFER)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_FENCE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DEVICE_MEMORY)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_BUFFER)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_IMAGE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_EVENT)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_QUERY_POOL)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_BUFFER_VIEW)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_IMAGE_VIEW)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_SHADER_MODULE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_PIPELINE_CACHE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_PIPELINE_LAYOUT)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_RENDER_PASS)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_PIPELINE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_SAMPLER)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DESCRIPTOR_POOL)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DESCRIPTOR_SET)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_FRAMEBUFFER)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_COMMAND_POOL)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_SURFACE_KHR)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_SWAPCHAIN_KHR)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DISPLAY_KHR)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DISPLAY_MODE_KHR)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_OBJECT_TABLE_NVX)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_VALIDATION_CACHE_EXT)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR)
  VK_ENUM_VALUE(VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR)
VK_ENUM_END

VK_ENUM_START(VkVendorId)
  VK_ENUM_VALUE(VK_VENDOR_ID_VIV)
  VK_ENUM_VALUE(VK_VENDOR_ID_VSI)
  VK_ENUM_VALUE(VK_VENDOR_ID_KAZAN)
VK_ENUM_END

#undef VK_ENUM_START
#undef VK_ENUM_VALUE
#undef VK_ENUM_END

#define VK_FLAGS_NO_VALUES(NAME) \
  static void NAME##s_debug_print(const char * name, uint32_t depth, \
                                  NAME##s v) { \
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = %i", depth, debug_print_tabs, \
           name, static_cast<uint32_t>(v)); \
  }

#define VK_FLAGS_START(NAME) \
  static void NAME##s_debug_print(const char * name, uint32_t depth, \
                                  NAME##s v); \
  static void NAME##Bits_debug_print(const char * name, uint32_t depth, \
                                     NAME##Bits v) { \
    NAME##s_debug_print(name, depth, static_cast<NAME##s>(v)); \
  } \
  static void NAME##s_debug_print(const char * name, uint32_t depth, \
                                  NAME##s v) { \
    char value[1024] = { '\0' }; \
    bool first = true;
#define VK_FLAGS_VALUE(VALUE) \
    if((v & VALUE) == VALUE) { \
      if(first) { \
        strcat(value, #VALUE); \
        first = false; \
      } else { \
        strcat(value, " | " #VALUE); \
      } \
    }
#define VK_FLAGS_END \
    if(first) { \
      strcat(value, "0"); \
    } \
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = %s", depth, debug_print_tabs, \
           name, value); \
  }

VK_FLAGS_NO_VALUES(VkInstanceCreateFlag)

VK_FLAGS_START(VkFormatFeatureFlag)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_BLIT_SRC_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_BLIT_DST_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_TRANSFER_SRC_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_DISJOINT_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_DISJOINT_BIT_KHR)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR)
  VK_FLAGS_VALUE(VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_START(VkImageUsageFlag)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_TRANSFER_SRC_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_TRANSFER_DST_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_SAMPLED_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_STORAGE_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV)
  VK_FLAGS_VALUE(VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_START(VkImageCreateFlag)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_SPARSE_BINDING_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_SPARSE_ALIASED_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_ALIAS_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_EXTENDED_USAGE_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_PROTECTED_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_DISJOINT_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_DISJOINT_BIT_KHR)
  VK_FLAGS_VALUE(VK_IMAGE_CREATE_ALIAS_BIT_KHR)
VK_FLAGS_END

VK_FLAGS_START(VkSampleCountFlag)
  VK_FLAGS_VALUE(VK_SAMPLE_COUNT_1_BIT)
  VK_FLAGS_VALUE(VK_SAMPLE_COUNT_2_BIT)
  VK_FLAGS_VALUE(VK_SAMPLE_COUNT_4_BIT)
  VK_FLAGS_VALUE(VK_SAMPLE_COUNT_8_BIT)
  VK_FLAGS_VALUE(VK_SAMPLE_COUNT_16_BIT)
  VK_FLAGS_VALUE(VK_SAMPLE_COUNT_32_BIT)
  VK_FLAGS_VALUE(VK_SAMPLE_COUNT_64_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkQueueFlag)
  VK_FLAGS_VALUE(VK_QUEUE_GRAPHICS_BIT)
  VK_FLAGS_VALUE(VK_QUEUE_COMPUTE_BIT)
  VK_FLAGS_VALUE(VK_QUEUE_TRANSFER_BIT)
  VK_FLAGS_VALUE(VK_QUEUE_SPARSE_BINDING_BIT)
  VK_FLAGS_VALUE(VK_QUEUE_PROTECTED_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkMemoryPropertyFlag)
  VK_FLAGS_VALUE(VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
  VK_FLAGS_VALUE(VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT)
  VK_FLAGS_VALUE(VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
  VK_FLAGS_VALUE(VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
  VK_FLAGS_VALUE(VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT)
  VK_FLAGS_VALUE(VK_MEMORY_PROPERTY_PROTECTED_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkMemoryHeapFlag)
  VK_FLAGS_VALUE(VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
  VK_FLAGS_VALUE(VK_MEMORY_HEAP_MULTI_INSTANCE_BIT)
  VK_FLAGS_VALUE(VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkDeviceCreateFlag)

VK_FLAGS_START(VkDeviceQueueCreateFlag)
  VK_FLAGS_VALUE(VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkPipelineStageFlag)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_VERTEX_INPUT_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_VERTEX_SHADER_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_TRANSFER_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_HOST_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV)
  VK_FLAGS_VALUE(VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkMemoryMapFlag)

VK_FLAGS_START(VkImageAspectFlag)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_COLOR_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_DEPTH_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_STENCIL_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_METADATA_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_PLANE_0_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_PLANE_1_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_PLANE_2_BIT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_PLANE_0_BIT_KHR)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_PLANE_1_BIT_KHR)
  VK_FLAGS_VALUE(VK_IMAGE_ASPECT_PLANE_2_BIT_KHR)
VK_FLAGS_END

VK_FLAGS_START(VkSparseImageFormatFlag)
  VK_FLAGS_VALUE(VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT)
  VK_FLAGS_VALUE(VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT)
  VK_FLAGS_VALUE(VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkSparseMemoryBindFlag)
  VK_FLAGS_VALUE(VK_SPARSE_MEMORY_BIND_METADATA_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkFenceCreateFlag)
  VK_FLAGS_VALUE(VK_FENCE_CREATE_SIGNALED_BIT)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkSemaphoreCreateFlag)

VK_FLAGS_NO_VALUES(VkEventCreateFlag)

VK_FLAGS_NO_VALUES(VkQueryPoolCreateFlag)

VK_FLAGS_START(VkQueryPipelineStatisticFlag)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT)
  VK_FLAGS_VALUE(VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkQueryResultFlag)
  VK_FLAGS_VALUE(VK_QUERY_RESULT_64_BIT)
  VK_FLAGS_VALUE(VK_QUERY_RESULT_WAIT_BIT)
  VK_FLAGS_VALUE(VK_QUERY_RESULT_WITH_AVAILABILITY_BIT)
  VK_FLAGS_VALUE(VK_QUERY_RESULT_PARTIAL_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkBufferCreateFlag)
  VK_FLAGS_VALUE(VK_BUFFER_CREATE_SPARSE_BINDING_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_CREATE_SPARSE_ALIASED_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_CREATE_PROTECTED_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_START(VkBufferUsageFlag)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_TRANSFER_DST_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_STORAGE_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_INDEX_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_VERTEX_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_RAY_TRACING_BIT_NV)
  VK_FLAGS_VALUE(VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkBufferViewCreateFlag)

VK_FLAGS_START(VkImageViewCreateFlag)
  VK_FLAGS_VALUE(VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkShaderModuleCreateFlag)

VK_FLAGS_NO_VALUES(VkPipelineCacheCreateFlag)

VK_FLAGS_START(VkPipelineCreateFlag)
  VK_FLAGS_VALUE(VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_CREATE_DERIVATIVE_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT)
  VK_FLAGS_VALUE(VK_PIPELINE_CREATE_DISPATCH_BASE)
  VK_FLAGS_VALUE(VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV)
  VK_FLAGS_VALUE(VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR)
  VK_FLAGS_VALUE(VK_PIPELINE_CREATE_DISPATCH_BASE_KHR)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkPipelineShaderStageCreateFlag)

VK_FLAGS_START(VkShaderStageFlag)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_VERTEX_BIT)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_GEOMETRY_BIT)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_FRAGMENT_BIT)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_COMPUTE_BIT)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_ALL_GRAPHICS)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_ALL)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_RAYGEN_BIT_NV)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_ANY_HIT_BIT_NV)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_MISS_BIT_NV)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_INTERSECTION_BIT_NV)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_CALLABLE_BIT_NV)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_TASK_BIT_NV)
  VK_FLAGS_VALUE(VK_SHADER_STAGE_MESH_BIT_NV)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkPipelineVertexInputStateCreateFlag)

VK_FLAGS_NO_VALUES(VkPipelineInputAssemblyStateCreateFlag)

VK_FLAGS_NO_VALUES(VkPipelineTessellationStateCreateFlag)

VK_FLAGS_NO_VALUES(VkPipelineViewportStateCreateFlag)

VK_FLAGS_NO_VALUES(VkPipelineRasterizationStateCreateFlag)

VK_FLAGS_START(VkCullModeFlag)
  VK_FLAGS_VALUE(VK_CULL_MODE_NONE)
  VK_FLAGS_VALUE(VK_CULL_MODE_FRONT_BIT)
  VK_FLAGS_VALUE(VK_CULL_MODE_BACK_BIT)
  VK_FLAGS_VALUE(VK_CULL_MODE_FRONT_AND_BACK)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkPipelineMultisampleStateCreateFlag)

VK_FLAGS_NO_VALUES(VkPipelineDepthStencilStateCreateFlag)

VK_FLAGS_NO_VALUES(VkPipelineColorBlendStateCreateFlag)

VK_FLAGS_START(VkColorComponentFlag)
  VK_FLAGS_VALUE(VK_COLOR_COMPONENT_R_BIT)
  VK_FLAGS_VALUE(VK_COLOR_COMPONENT_G_BIT)
  VK_FLAGS_VALUE(VK_COLOR_COMPONENT_B_BIT)
  VK_FLAGS_VALUE(VK_COLOR_COMPONENT_A_BIT)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkPipelineDynamicStateCreateFlag)

VK_FLAGS_NO_VALUES(VkPipelineLayoutCreateFlag)

VK_FLAGS_START(VkSamplerCreateFlag)
  VK_FLAGS_VALUE(VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT)
  VK_FLAGS_VALUE(VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_START(VkDescriptorSetLayoutCreateFlag)
  VK_FLAGS_VALUE(VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR)
  VK_FLAGS_VALUE(VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_START(VkDescriptorPoolCreateFlag)
  VK_FLAGS_VALUE(VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT)
  VK_FLAGS_VALUE(VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_NO_VALUES(VkDescriptorPoolResetFlag)

VK_FLAGS_NO_VALUES(VkFramebufferCreateFlag)

VK_FLAGS_NO_VALUES(VkRenderPassCreateFlag)

VK_FLAGS_START(VkAttachmentDescriptionFlag)
  VK_FLAGS_VALUE(VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkSubpassDescriptionFlag)
  VK_FLAGS_VALUE(VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX)
  VK_FLAGS_VALUE(VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX)
VK_FLAGS_END

VK_FLAGS_START(VkAccessFlag)
  VK_FLAGS_VALUE(VK_ACCESS_INDIRECT_COMMAND_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_INDEX_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_UNIFORM_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_INPUT_ATTACHMENT_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_SHADER_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_SHADER_WRITE_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_COLOR_ATTACHMENT_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_TRANSFER_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_TRANSFER_WRITE_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_HOST_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_HOST_WRITE_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_MEMORY_READ_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_MEMORY_WRITE_BIT)
  VK_FLAGS_VALUE(VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT)
  VK_FLAGS_VALUE(VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT)
  VK_FLAGS_VALUE(VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT)
  VK_FLAGS_VALUE(VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT)
  VK_FLAGS_VALUE(VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX)
  VK_FLAGS_VALUE(VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX)
  VK_FLAGS_VALUE(VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT)
  VK_FLAGS_VALUE(VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV)
  VK_FLAGS_VALUE(VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV)
  VK_FLAGS_VALUE(VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV)
  VK_FLAGS_VALUE(VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT)
VK_FLAGS_END

VK_FLAGS_START(VkDependencyFlag)
  VK_FLAGS_VALUE(VK_DEPENDENCY_BY_REGION_BIT)
  VK_FLAGS_VALUE(VK_DEPENDENCY_DEVICE_GROUP_BIT)
  VK_FLAGS_VALUE(VK_DEPENDENCY_VIEW_LOCAL_BIT)
  VK_FLAGS_VALUE(VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR)
  VK_FLAGS_VALUE(VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR)
VK_FLAGS_END

VK_FLAGS_START(VkCommandPoolCreateFlag)
  VK_FLAGS_VALUE(VK_COMMAND_POOL_CREATE_TRANSIENT_BIT)
  VK_FLAGS_VALUE(VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT)
  VK_FLAGS_VALUE(VK_COMMAND_POOL_CREATE_PROTECTED_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkCommandPoolResetFlag)
  VK_FLAGS_VALUE(VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkCommandBufferUsageFlag)
  VK_FLAGS_VALUE(VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
  VK_FLAGS_VALUE(VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT)
  VK_FLAGS_VALUE(VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkQueryControlFlag)
  VK_FLAGS_VALUE(VK_QUERY_CONTROL_PRECISE_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkCommandBufferResetFlag)
  VK_FLAGS_VALUE(VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT)
VK_FLAGS_END

VK_FLAGS_START(VkStencilFaceFlag)
  VK_FLAGS_VALUE(VK_STENCIL_FACE_FRONT_BIT)
  VK_FLAGS_VALUE(VK_STENCIL_FACE_BACK_BIT)
  VK_FLAGS_VALUE(VK_STENCIL_FRONT_AND_BACK)
VK_FLAGS_END

#undef VK_FLAGS_NO_VALUES
#undef VK_FLAGS_START
#undef VK_FLAGS_VALUE
#undef VK_FLAGS_END

#define VK_STRUCT_START(NAME) \
  static void NAME##_debug_print_members(const char * name, uint32_t depth, \
                                         const NAME & value); \
  static void NAME##_debug_print(const char * name, uint32_t depth, \
                                 const NAME & value) { \
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s", depth, debug_print_tabs, name); \
    NAME##_debug_print_members(name, depth + 1, value); \
  } \
  static void NAME##_debug_print(const char * name, uint32_t depth, \
                                 const NAME * value) { \
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = %p", depth, debug_print_tabs, \
           name, value); \
    if(value != nullptr) { \
      NAME##_debug_print_members(name, depth + 1, *value); \
    } \
  } \
  static void NAME##_debug_print_members(const char * name, uint32_t depth, \
                                         const NAME & value) {
#define VK_STRUCT_MEMBER(TYPE, NAME) \
    TYPE##_debug_print(#NAME, depth, value.NAME);
#define VK_STRUCT_MEMBER_ARRAY(TYPE, COUNT, NAME) \
    if(value.NAME == nullptr) { \
      Log::E(Log::Tag{"VulkanDebug"}, "%.*s" #NAME " = nullptr", depth, \
             debug_print_tabs); \
    } else { \
      Log::E(Log::Tag{"VulkanDebug"}, "%.*s" #NAME " = %p", depth, \
             debug_print_tabs, value.NAME); \
      char name[64] = { 0 }; \
      for(uint32_t i = 0; i < COUNT; ++i) { \
        snprintf(name, 64, #NAME "[%i]", i); \
        TYPE##_debug_print(name, depth, value.NAME[i]); \
      } \
    }
#define VK_STRUCT_MEMBER_PTR(TYPE, NAME) \
    if(value.NAME == nullptr) { \
      Log::E(Log::Tag{"VulkanDebug"}, "%.*s" #NAME " = nullptr", depth, \
             debug_print_tabs); \
    } else { \
      Log::E(Log::Tag{"VulkanDebug"}, "%.*s" #NAME " = %p", depth, \
             debug_print_tabs, value.NAME); \
      TYPE##_debug_print(#NAME, depth, *value.NAME); \
    }
#define VK_STRUCT_END \
  }

#define VK_BASIC_TYPE(NAME, TYPE, FMT) \
  static void NAME##_debug_print(const char * name, uint32_t depth, \
                                 TYPE value) { \
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = " FMT, depth, debug_print_tabs, \
           name, value); \
  }
VK_BASIC_TYPE(size_t, size_t, "%zu")
VK_BASIC_TYPE(uint32_t, uint32_t, "%u")
VK_BASIC_TYPE(int32_t, int32_t, "%i")
VK_BASIC_TYPE(uint64_t, uint64_t, "%llu")
VK_BASIC_TYPE(float, float, "%f")
VK_BASIC_TYPE(void_ptr, const void *, "%p")
VK_BASIC_TYPE(cstring, const char *, "%s")

VK_BASIC_TYPE(VkFlags, VkFlags, "%u")
VK_BASIC_TYPE(VkDeviceSize, VkDeviceSize, "%llu")
VK_BASIC_TYPE(VkSampleMask, VkSampleMask, "%u")
#undef VK_BASIC_TYPE

#define VK_OBJECT_TYPE(TYPE) \
  static void TYPE##_debug_print(const char * name, uint32_t depth, \
                                 TYPE value) { \
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = %p", depth, debug_print_tabs, \
           name, value); \
  }
#define VK_OBJECT_NON_DISPATCHABLE_TYPE(TYPE) \
  static void TYPE##_debug_print(const char * name, uint32_t depth, \
                                 TYPE value) { \
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = %llx", depth, debug_print_tabs, \
           name, (uint64_t)value); \
  }
VK_OBJECT_TYPE(VkInstance)
VK_OBJECT_TYPE(VkPhysicalDevice)
VK_OBJECT_TYPE(VkDevice)
VK_OBJECT_TYPE(VkQueue)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkSemaphore)
VK_OBJECT_TYPE(VkCommandBuffer)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkFence)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkDeviceMemory)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkBuffer)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkImage)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkEvent)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkQueryPool)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkBufferView)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkImageView)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkShaderModule)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkPipelineCache)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkPipelineLayout)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkRenderPass)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkPipeline)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkDescriptorSetLayout)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkSampler)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkDescriptorPool)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkDescriptorSet)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkFramebuffer)
VK_OBJECT_NON_DISPATCHABLE_TYPE(VkCommandPool)
#undef VK_OBJECT_TYPE
#undef VK_OBJECT_NON_DISPATCHABLE_TYPE

static void VkBool32_debug_print(const char * name, uint32_t depth,
                                 VkBool32 value) {
  if(value == VK_TRUE) {
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = VK_TRUE", depth,
           debug_print_tabs, name);
  } else if(value == VK_FALSE) {
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = VK_FALSE", depth,
           debug_print_tabs, name);
  } else {
    Log::E(Log::Tag{"VulkanDebug"}, "%.*s%s = invalid(%i)", depth,
           debug_print_tabs, name, value);
  }
}

VK_STRUCT_START(VkApplicationInfo)
  VK_STRUCT_MEMBER(VkStructureType   , sType)
  VK_STRUCT_MEMBER(void_ptr       , pNext)
  VK_STRUCT_MEMBER(cstring       , pApplicationName)
  VK_STRUCT_MEMBER(uint32_t          , applicationVersion)
  VK_STRUCT_MEMBER(cstring       , pEngineName)
  VK_STRUCT_MEMBER(uint32_t          , engineVersion)
  VK_STRUCT_MEMBER(uint32_t          , apiVersion)
VK_STRUCT_END

VK_STRUCT_START(VkInstanceCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType            , sType)
  VK_STRUCT_MEMBER(void_ptr                   , pNext)
  VK_STRUCT_MEMBER(VkInstanceCreateFlags      , flags)
  VK_STRUCT_MEMBER(VkApplicationInfo   , pApplicationInfo)
  VK_STRUCT_MEMBER(uint32_t                   , enabledLayerCount)
  VK_STRUCT_MEMBER_ARRAY(cstring, value.enabledLayerCount, ppEnabledLayerNames)
  VK_STRUCT_MEMBER(uint32_t                   , enabledExtensionCount)
  VK_STRUCT_MEMBER_ARRAY(cstring, value.enabledExtensionCount, ppEnabledExtensionNames)
VK_STRUCT_END

VK_STRUCT_START(VkAllocationCallbacks)
  //VK_STRUCT_MEMBER(void_ptr, pUserData)
  //VK_STRUCT_MEMBER(void_ptr, pfnAllocation)
  //VK_STRUCT_MEMBER(void_ptr, pfnReallocation)
  //VK_STRUCT_MEMBER(void_ptr, pfnFree)
  //VK_STRUCT_MEMBER(void_ptr, pfnInternalAllocation)
  //VK_STRUCT_MEMBER(void_ptr, pfnInternalFree)
VK_STRUCT_END

VK_STRUCT_START(VkPhysicalDeviceFeatures)
  VK_STRUCT_MEMBER(VkBool32, robustBufferAccess)
  VK_STRUCT_MEMBER(VkBool32, fullDrawIndexUint32)
  VK_STRUCT_MEMBER(VkBool32, imageCubeArray)
  VK_STRUCT_MEMBER(VkBool32, independentBlend)
  VK_STRUCT_MEMBER(VkBool32, geometryShader)
  VK_STRUCT_MEMBER(VkBool32, tessellationShader)
  VK_STRUCT_MEMBER(VkBool32, sampleRateShading)
  VK_STRUCT_MEMBER(VkBool32, dualSrcBlend)
  VK_STRUCT_MEMBER(VkBool32, logicOp)
  VK_STRUCT_MEMBER(VkBool32, multiDrawIndirect)
  VK_STRUCT_MEMBER(VkBool32, drawIndirectFirstInstance)
  VK_STRUCT_MEMBER(VkBool32, depthClamp)
  VK_STRUCT_MEMBER(VkBool32, depthBiasClamp)
  VK_STRUCT_MEMBER(VkBool32, fillModeNonSolid)
  VK_STRUCT_MEMBER(VkBool32, depthBounds)
  VK_STRUCT_MEMBER(VkBool32, wideLines)
  VK_STRUCT_MEMBER(VkBool32, largePoints)
  VK_STRUCT_MEMBER(VkBool32, alphaToOne)
  VK_STRUCT_MEMBER(VkBool32, multiViewport)
  VK_STRUCT_MEMBER(VkBool32, samplerAnisotropy)
  VK_STRUCT_MEMBER(VkBool32, textureCompressionETC2)
  VK_STRUCT_MEMBER(VkBool32, textureCompressionASTC_LDR)
  VK_STRUCT_MEMBER(VkBool32, textureCompressionBC)
  VK_STRUCT_MEMBER(VkBool32, occlusionQueryPrecise)
  VK_STRUCT_MEMBER(VkBool32, pipelineStatisticsQuery)
  VK_STRUCT_MEMBER(VkBool32, vertexPipelineStoresAndAtomics)
  VK_STRUCT_MEMBER(VkBool32, fragmentStoresAndAtomics)
  VK_STRUCT_MEMBER(VkBool32, shaderTessellationAndGeometryPointSize)
  VK_STRUCT_MEMBER(VkBool32, shaderImageGatherExtended)
  VK_STRUCT_MEMBER(VkBool32, shaderStorageImageExtendedFormats)
  VK_STRUCT_MEMBER(VkBool32, shaderStorageImageMultisample)
  VK_STRUCT_MEMBER(VkBool32, shaderStorageImageReadWithoutFormat)
  VK_STRUCT_MEMBER(VkBool32, shaderStorageImageWriteWithoutFormat)
  VK_STRUCT_MEMBER(VkBool32, shaderUniformBufferArrayDynamicIndexing)
  VK_STRUCT_MEMBER(VkBool32, shaderSampledImageArrayDynamicIndexing)
  VK_STRUCT_MEMBER(VkBool32, shaderStorageBufferArrayDynamicIndexing)
  VK_STRUCT_MEMBER(VkBool32, shaderStorageImageArrayDynamicIndexing)
  VK_STRUCT_MEMBER(VkBool32, shaderClipDistance)
  VK_STRUCT_MEMBER(VkBool32, shaderCullDistance)
  VK_STRUCT_MEMBER(VkBool32, shaderFloat64)
  VK_STRUCT_MEMBER(VkBool32, shaderInt64)
  VK_STRUCT_MEMBER(VkBool32, shaderInt16)
  VK_STRUCT_MEMBER(VkBool32, shaderResourceResidency)
  VK_STRUCT_MEMBER(VkBool32, shaderResourceMinLod)
  VK_STRUCT_MEMBER(VkBool32, sparseBinding)
  VK_STRUCT_MEMBER(VkBool32, sparseResidencyBuffer)
  VK_STRUCT_MEMBER(VkBool32, sparseResidencyImage2D)
  VK_STRUCT_MEMBER(VkBool32, sparseResidencyImage3D)
  VK_STRUCT_MEMBER(VkBool32, sparseResidency2Samples)
  VK_STRUCT_MEMBER(VkBool32, sparseResidency4Samples)
  VK_STRUCT_MEMBER(VkBool32, sparseResidency8Samples)
  VK_STRUCT_MEMBER(VkBool32, sparseResidency16Samples)
  VK_STRUCT_MEMBER(VkBool32, sparseResidencyAliased)
  VK_STRUCT_MEMBER(VkBool32, variableMultisampleRate)
  VK_STRUCT_MEMBER(VkBool32, inheritedQueries)
VK_STRUCT_END

VK_STRUCT_START(VkFormatProperties)
  VK_STRUCT_MEMBER(VkFormatFeatureFlags, linearTilingFeatures)
  VK_STRUCT_MEMBER(VkFormatFeatureFlags, optimalTilingFeatures)
  VK_STRUCT_MEMBER(VkFormatFeatureFlags, bufferFeatures)
VK_STRUCT_END

VK_STRUCT_START(VkExtent3D)
  VK_STRUCT_MEMBER(uint32_t, width)
  VK_STRUCT_MEMBER(uint32_t, height)
  VK_STRUCT_MEMBER(uint32_t, depth)
VK_STRUCT_END

VK_STRUCT_START(VkImageFormatProperties)
  VK_STRUCT_MEMBER(VkExtent3D, maxExtent)
  VK_STRUCT_MEMBER(uint32_t, maxMipLevels)
  VK_STRUCT_MEMBER(uint32_t, maxArrayLayers)
  VK_STRUCT_MEMBER(VkSampleCountFlags, sampleCounts)
  VK_STRUCT_MEMBER(VkDeviceSize, maxResourceSize)
VK_STRUCT_END

VK_STRUCT_START(VkPhysicalDeviceLimits)
  VK_STRUCT_MEMBER(uint32_t, maxImageDimension1D)
  VK_STRUCT_MEMBER(uint32_t, maxImageDimension2D)
  VK_STRUCT_MEMBER(uint32_t, maxImageDimension3D)
  VK_STRUCT_MEMBER(uint32_t, maxImageDimensionCube)
  VK_STRUCT_MEMBER(uint32_t, maxImageArrayLayers)
  VK_STRUCT_MEMBER(uint32_t, maxTexelBufferElements)
  VK_STRUCT_MEMBER(uint32_t, maxUniformBufferRange)
  VK_STRUCT_MEMBER(uint32_t, maxStorageBufferRange)
  VK_STRUCT_MEMBER(uint32_t, maxPushConstantsSize)
  VK_STRUCT_MEMBER(uint32_t, maxMemoryAllocationCount)
  VK_STRUCT_MEMBER(uint32_t, maxSamplerAllocationCount)
  VK_STRUCT_MEMBER(VkDeviceSize, bufferImageGranularity)
  VK_STRUCT_MEMBER(VkDeviceSize, sparseAddressSpaceSize)
  VK_STRUCT_MEMBER(uint32_t, maxBoundDescriptorSets)
  VK_STRUCT_MEMBER(uint32_t, maxPerStageDescriptorSamplers)
  VK_STRUCT_MEMBER(uint32_t, maxPerStageDescriptorUniformBuffers)
  VK_STRUCT_MEMBER(uint32_t, maxPerStageDescriptorStorageBuffers)
  VK_STRUCT_MEMBER(uint32_t, maxPerStageDescriptorSampledImages)
  VK_STRUCT_MEMBER(uint32_t, maxPerStageDescriptorStorageImages)
  VK_STRUCT_MEMBER(uint32_t, maxPerStageDescriptorInputAttachments)
  VK_STRUCT_MEMBER(uint32_t, maxPerStageResources)
  VK_STRUCT_MEMBER(uint32_t, maxDescriptorSetSamplers)
  VK_STRUCT_MEMBER(uint32_t, maxDescriptorSetUniformBuffers)
  VK_STRUCT_MEMBER(uint32_t, maxDescriptorSetUniformBuffersDynamic)
  VK_STRUCT_MEMBER(uint32_t, maxDescriptorSetStorageBuffers)
  VK_STRUCT_MEMBER(uint32_t, maxDescriptorSetStorageBuffersDynamic)
  VK_STRUCT_MEMBER(uint32_t, maxDescriptorSetSampledImages)
  VK_STRUCT_MEMBER(uint32_t, maxDescriptorSetStorageImages)
  VK_STRUCT_MEMBER(uint32_t, maxDescriptorSetInputAttachments)
  VK_STRUCT_MEMBER(uint32_t, maxVertexInputAttributes)
  VK_STRUCT_MEMBER(uint32_t, maxVertexInputBindings)
  VK_STRUCT_MEMBER(uint32_t, maxVertexInputAttributeOffset)
  VK_STRUCT_MEMBER(uint32_t, maxVertexInputBindingStride)
  VK_STRUCT_MEMBER(uint32_t, maxVertexOutputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxTessellationGenerationLevel)
  VK_STRUCT_MEMBER(uint32_t, maxTessellationPatchSize)
  VK_STRUCT_MEMBER(uint32_t, maxTessellationControlPerVertexInputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxTessellationControlPerVertexOutputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxTessellationControlPerPatchOutputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxTessellationControlTotalOutputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxTessellationEvaluationInputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxTessellationEvaluationOutputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxGeometryShaderInvocations)
  VK_STRUCT_MEMBER(uint32_t, maxGeometryInputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxGeometryOutputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxGeometryOutputVertices)
  VK_STRUCT_MEMBER(uint32_t, maxGeometryTotalOutputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxFragmentInputComponents)
  VK_STRUCT_MEMBER(uint32_t, maxFragmentOutputAttachments)
  VK_STRUCT_MEMBER(uint32_t, maxFragmentDualSrcAttachments)
  VK_STRUCT_MEMBER(uint32_t, maxFragmentCombinedOutputResources)
  VK_STRUCT_MEMBER(uint32_t, maxComputeSharedMemorySize)
  VK_STRUCT_MEMBER_ARRAY(uint32_t, 3, maxComputeWorkGroupCount)
  VK_STRUCT_MEMBER(uint32_t, maxComputeWorkGroupInvocations)
  VK_STRUCT_MEMBER_ARRAY(uint32_t, 3, maxComputeWorkGroupSize)
  VK_STRUCT_MEMBER(uint32_t, subPixelPrecisionBits)
  VK_STRUCT_MEMBER(uint32_t, subTexelPrecisionBits)
  VK_STRUCT_MEMBER(uint32_t, mipmapPrecisionBits)
  VK_STRUCT_MEMBER(uint32_t, maxDrawIndexedIndexValue)
  VK_STRUCT_MEMBER(uint32_t, maxDrawIndirectCount)
  VK_STRUCT_MEMBER(float, maxSamplerLodBias)
  VK_STRUCT_MEMBER(float, maxSamplerAnisotropy)
  VK_STRUCT_MEMBER(uint32_t, maxViewports)
  VK_STRUCT_MEMBER_ARRAY(uint32_t, 2, maxViewportDimensions)
  VK_STRUCT_MEMBER_ARRAY(float, 2, viewportBoundsRange)
  VK_STRUCT_MEMBER(uint32_t, viewportSubPixelBits)
  VK_STRUCT_MEMBER(size_t, minMemoryMapAlignment)
  VK_STRUCT_MEMBER(VkDeviceSize, minTexelBufferOffsetAlignment)
  VK_STRUCT_MEMBER(VkDeviceSize, minUniformBufferOffsetAlignment)
  VK_STRUCT_MEMBER(VkDeviceSize, minStorageBufferOffsetAlignment)
  VK_STRUCT_MEMBER(int32_t, minTexelOffset)
  VK_STRUCT_MEMBER(uint32_t, maxTexelOffset)
  VK_STRUCT_MEMBER(int32_t, minTexelGatherOffset)
  VK_STRUCT_MEMBER(uint32_t, maxTexelGatherOffset)
  VK_STRUCT_MEMBER(float, minInterpolationOffset)
  VK_STRUCT_MEMBER(float, maxInterpolationOffset)
  VK_STRUCT_MEMBER(uint32_t, subPixelInterpolationOffsetBits)
  VK_STRUCT_MEMBER(uint32_t, maxFramebufferWidth)
  VK_STRUCT_MEMBER(uint32_t, maxFramebufferHeight)
  VK_STRUCT_MEMBER(uint32_t, maxFramebufferLayers)
  VK_STRUCT_MEMBER(VkSampleCountFlags, framebufferColorSampleCounts)
  VK_STRUCT_MEMBER(VkSampleCountFlags, framebufferDepthSampleCounts)
  VK_STRUCT_MEMBER(VkSampleCountFlags, framebufferStencilSampleCounts)
  VK_STRUCT_MEMBER(VkSampleCountFlags, framebufferNoAttachmentsSampleCounts)
  VK_STRUCT_MEMBER(uint32_t, maxColorAttachments)
  VK_STRUCT_MEMBER(VkSampleCountFlags, sampledImageColorSampleCounts)
  VK_STRUCT_MEMBER(VkSampleCountFlags, sampledImageIntegerSampleCounts)
  VK_STRUCT_MEMBER(VkSampleCountFlags, sampledImageDepthSampleCounts)
  VK_STRUCT_MEMBER(VkSampleCountFlags, sampledImageStencilSampleCounts)
  VK_STRUCT_MEMBER(VkSampleCountFlags, storageImageSampleCounts)
  VK_STRUCT_MEMBER(uint32_t, maxSampleMaskWords)
  VK_STRUCT_MEMBER(VkBool32, timestampComputeAndGraphics)
  VK_STRUCT_MEMBER(float, timestampPeriod)
  VK_STRUCT_MEMBER(uint32_t, maxClipDistances)
  VK_STRUCT_MEMBER(uint32_t, maxCullDistances)
  VK_STRUCT_MEMBER(uint32_t, maxCombinedClipAndCullDistances)
  VK_STRUCT_MEMBER(uint32_t, discreteQueuePriorities)
  VK_STRUCT_MEMBER_ARRAY(float, 2, pointSizeRange)
  VK_STRUCT_MEMBER_ARRAY(float, 2, lineWidthRange)
  VK_STRUCT_MEMBER(float, pointSizeGranularity)
  VK_STRUCT_MEMBER(float, lineWidthGranularity)
  VK_STRUCT_MEMBER(VkBool32, strictLines)
  VK_STRUCT_MEMBER(VkBool32, standardSampleLocations)
  VK_STRUCT_MEMBER(VkDeviceSize, optimalBufferCopyOffsetAlignment)
  VK_STRUCT_MEMBER(VkDeviceSize, optimalBufferCopyRowPitchAlignment)
  VK_STRUCT_MEMBER(VkDeviceSize, nonCoherentAtomSize)
VK_STRUCT_END

VK_STRUCT_START(VkPhysicalDeviceSparseProperties)
  VK_STRUCT_MEMBER(VkBool32, residencyStandard2DBlockShape)
  VK_STRUCT_MEMBER(VkBool32, residencyStandard2DMultisampleBlockShape)
  VK_STRUCT_MEMBER(VkBool32, residencyStandard3DBlockShape)
  VK_STRUCT_MEMBER(VkBool32, residencyAlignedMipSize)
  VK_STRUCT_MEMBER(VkBool32, residencyNonResidentStrict)
VK_STRUCT_END

VK_STRUCT_START(VkPhysicalDeviceProperties)
  VK_STRUCT_MEMBER(uint32_t, apiVersion)
  VK_STRUCT_MEMBER(uint32_t, driverVersion)
  VK_STRUCT_MEMBER(uint32_t, vendorID)
  VK_STRUCT_MEMBER(uint32_t, deviceID)
  VK_STRUCT_MEMBER(VkPhysicalDeviceType, deviceType)
  VK_STRUCT_MEMBER(cstring, deviceName)
  //VK_STRUCT_MEMBER(uint8_t, pipelineCacheUUID[VK_UUID_SIZE])
  VK_STRUCT_MEMBER(VkPhysicalDeviceLimits, limits)
  VK_STRUCT_MEMBER(VkPhysicalDeviceSparseProperties, sparseProperties)
VK_STRUCT_END

VK_STRUCT_START(VkQueueFamilyProperties)
  VK_STRUCT_MEMBER(VkQueueFlags, queueFlags)
  VK_STRUCT_MEMBER(uint32_t, queueCount)
  VK_STRUCT_MEMBER(uint32_t, timestampValidBits)
  VK_STRUCT_MEMBER(VkExtent3D, minImageTransferGranularity)
VK_STRUCT_END

VK_STRUCT_START(VkMemoryType)
  VK_STRUCT_MEMBER(VkMemoryPropertyFlags, propertyFlags)
  VK_STRUCT_MEMBER(uint32_t, heapIndex)
VK_STRUCT_END

VK_STRUCT_START(VkMemoryHeap)
  VK_STRUCT_MEMBER(VkDeviceSize, size)
  VK_STRUCT_MEMBER(VkMemoryHeapFlags, flags)
VK_STRUCT_END

VK_STRUCT_START(VkPhysicalDeviceMemoryProperties)
  VK_STRUCT_MEMBER(uint32_t, memoryTypeCount)
  VK_STRUCT_MEMBER_ARRAY(VkMemoryType, value.memoryTypeCount, memoryTypes)
  VK_STRUCT_MEMBER(uint32_t, memoryHeapCount)
  VK_STRUCT_MEMBER_ARRAY(VkMemoryHeap, value.memoryHeapCount, memoryHeaps)
VK_STRUCT_END

VK_STRUCT_START(VkDeviceQueueCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkDeviceQueueCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, queueFamilyIndex)
  VK_STRUCT_MEMBER(uint32_t, queueCount)
  VK_STRUCT_MEMBER_ARRAY(float, value.queueCount, pQueuePriorities)
VK_STRUCT_END

VK_STRUCT_START(VkDeviceCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkDeviceCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, queueCreateInfoCount)
  VK_STRUCT_MEMBER(VkDeviceQueueCreateInfo, pQueueCreateInfos)
  VK_STRUCT_MEMBER(uint32_t, enabledLayerCount)
  VK_STRUCT_MEMBER_ARRAY(cstring, value.enabledLayerCount, ppEnabledLayerNames)
  VK_STRUCT_MEMBER(uint32_t, enabledExtensionCount)
  VK_STRUCT_MEMBER_ARRAY(cstring, value.enabledExtensionCount, ppEnabledExtensionNames)
  VK_STRUCT_MEMBER(VkPhysicalDeviceFeatures, pEnabledFeatures)
VK_STRUCT_END

VK_STRUCT_START(VkExtensionProperties)
  VK_STRUCT_MEMBER(cstring, extensionName)
  VK_STRUCT_MEMBER(uint32_t, specVersion)
VK_STRUCT_END

VK_STRUCT_START(VkLayerProperties)
  VK_STRUCT_MEMBER(cstring, layerName)
  VK_STRUCT_MEMBER(uint32_t, specVersion)
  VK_STRUCT_MEMBER(uint32_t, implementationVersion)
  VK_STRUCT_MEMBER(cstring, description)
VK_STRUCT_END

VK_STRUCT_START(VkSubmitInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(uint32_t, waitSemaphoreCount)
  VK_STRUCT_MEMBER_ARRAY(VkSemaphore, value.waitSemaphoreCount, pWaitSemaphores)
  VK_STRUCT_MEMBER_ARRAY(VkPipelineStageFlags, value.waitSemaphoreCount, pWaitDstStageMask)
  VK_STRUCT_MEMBER(uint32_t, commandBufferCount)
  VK_STRUCT_MEMBER_ARRAY(VkCommandBuffer, value.commandBufferCount, pCommandBuffers)
  VK_STRUCT_MEMBER(uint32_t, signalSemaphoreCount)
  VK_STRUCT_MEMBER_ARRAY(VkSemaphore, value.signalSemaphoreCount, pSignalSemaphores)
VK_STRUCT_END

VK_STRUCT_START(VkMemoryAllocateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkDeviceSize, allocationSize)
  VK_STRUCT_MEMBER(uint32_t, memoryTypeIndex)
VK_STRUCT_END

VK_STRUCT_START(VkMappedMemoryRange)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkDeviceMemory, memory)
  VK_STRUCT_MEMBER(VkDeviceSize, offset)
  VK_STRUCT_MEMBER(VkDeviceSize, size)
VK_STRUCT_END

VK_STRUCT_START(VkMemoryRequirements)
  VK_STRUCT_MEMBER(VkDeviceSize, size)
  VK_STRUCT_MEMBER(VkDeviceSize, alignment)
  VK_STRUCT_MEMBER(uint32_t, memoryTypeBits)
VK_STRUCT_END

VK_STRUCT_START(VkSparseImageFormatProperties)
  VK_STRUCT_MEMBER(VkImageAspectFlags, aspectMask)
  VK_STRUCT_MEMBER(VkExtent3D, imageGranularity)
  VK_STRUCT_MEMBER(VkSparseImageFormatFlags, flags)
VK_STRUCT_END

VK_STRUCT_START(VkSparseImageMemoryRequirements)
  VK_STRUCT_MEMBER(VkSparseImageFormatProperties, formatProperties)
  VK_STRUCT_MEMBER(uint32_t, imageMipTailFirstLod)
  VK_STRUCT_MEMBER(VkDeviceSize, imageMipTailSize)
  VK_STRUCT_MEMBER(VkDeviceSize, imageMipTailOffset)
  VK_STRUCT_MEMBER(VkDeviceSize, imageMipTailStride)
VK_STRUCT_END

VK_STRUCT_START(VkSparseMemoryBind)
  VK_STRUCT_MEMBER(VkDeviceSize, resourceOffset)
  VK_STRUCT_MEMBER(VkDeviceSize, size)
  VK_STRUCT_MEMBER(VkDeviceMemory, memory)
  VK_STRUCT_MEMBER(VkDeviceSize, memoryOffset)
  VK_STRUCT_MEMBER(VkSparseMemoryBindFlags, flags)
VK_STRUCT_END

VK_STRUCT_START(VkSparseBufferMemoryBindInfo)
  VK_STRUCT_MEMBER(VkBuffer, buffer)
  VK_STRUCT_MEMBER(uint32_t, bindCount)
  VK_STRUCT_MEMBER_ARRAY(VkSparseMemoryBind, value.bindCount, pBinds)
VK_STRUCT_END

VK_STRUCT_START(VkSparseImageOpaqueMemoryBindInfo)
  VK_STRUCT_MEMBER(VkImage, image)
  VK_STRUCT_MEMBER(uint32_t, bindCount)
  VK_STRUCT_MEMBER_ARRAY(VkSparseMemoryBind, value.bindCount, pBinds)
VK_STRUCT_END

VK_STRUCT_START(VkImageSubresource)
  VK_STRUCT_MEMBER(VkImageAspectFlags, aspectMask)
  VK_STRUCT_MEMBER(uint32_t, mipLevel)
  VK_STRUCT_MEMBER(uint32_t, arrayLayer)
VK_STRUCT_END

VK_STRUCT_START(VkOffset3D)
  VK_STRUCT_MEMBER(int32_t, x)
  VK_STRUCT_MEMBER(int32_t, y)
  VK_STRUCT_MEMBER(int32_t, z)
VK_STRUCT_END

VK_STRUCT_START(VkSparseImageMemoryBind)
  VK_STRUCT_MEMBER(VkImageSubresource, subresource)
  VK_STRUCT_MEMBER(VkOffset3D, offset)
  VK_STRUCT_MEMBER(VkExtent3D, extent)
  VK_STRUCT_MEMBER(VkDeviceMemory, memory)
  VK_STRUCT_MEMBER(VkDeviceSize, memoryOffset)
  VK_STRUCT_MEMBER(VkSparseMemoryBindFlags, flags)
VK_STRUCT_END

VK_STRUCT_START(VkSparseImageMemoryBindInfo)
  VK_STRUCT_MEMBER(VkImage, image)
  VK_STRUCT_MEMBER(uint32_t, bindCount)
  VK_STRUCT_MEMBER_ARRAY(VkSparseImageMemoryBind, value.bindCount, pBinds)
VK_STRUCT_END

VK_STRUCT_START(VkBindSparseInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(uint32_t, waitSemaphoreCount)
  VK_STRUCT_MEMBER_ARRAY(VkSemaphore, value.waitSemaphoreCount, pWaitSemaphores)
  VK_STRUCT_MEMBER(uint32_t, bufferBindCount)
  VK_STRUCT_MEMBER_ARRAY(VkSparseBufferMemoryBindInfo, value.bufferBindCount, pBufferBinds)
  VK_STRUCT_MEMBER(uint32_t, imageOpaqueBindCount)
  VK_STRUCT_MEMBER_ARRAY(VkSparseImageOpaqueMemoryBindInfo, value.imageOpaqueBindCount, pImageOpaqueBinds)
  VK_STRUCT_MEMBER(uint32_t, imageBindCount)
  VK_STRUCT_MEMBER_ARRAY(VkSparseImageMemoryBindInfo, value.imageBindCount, pImageBinds)
  VK_STRUCT_MEMBER(uint32_t, signalSemaphoreCount)
  VK_STRUCT_MEMBER_ARRAY(VkSemaphore, value.signalSemaphoreCount, pSignalSemaphores)
VK_STRUCT_END

VK_STRUCT_START(VkFenceCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkFenceCreateFlags, flags)
VK_STRUCT_END

VK_STRUCT_START(VkSemaphoreCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkSemaphoreCreateFlags, flags)
VK_STRUCT_END

VK_STRUCT_START(VkEventCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkEventCreateFlags, flags)
VK_STRUCT_END

VK_STRUCT_START(VkQueryPoolCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkQueryPoolCreateFlags, flags)
  VK_STRUCT_MEMBER(VkQueryType, queryType)
  VK_STRUCT_MEMBER(uint32_t, queryCount)
  VK_STRUCT_MEMBER(VkQueryPipelineStatisticFlags, pipelineStatistics)
VK_STRUCT_END

VK_STRUCT_START(VkBufferCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkBufferCreateFlags, flags)
  VK_STRUCT_MEMBER(VkDeviceSize, size)
  VK_STRUCT_MEMBER(VkBufferUsageFlags, usage)
  VK_STRUCT_MEMBER(VkSharingMode, sharingMode)
  VK_STRUCT_MEMBER(uint32_t, queueFamilyIndexCount)
  VK_STRUCT_MEMBER_ARRAY(uint32_t, value.queueFamilyIndexCount, pQueueFamilyIndices)
VK_STRUCT_END

VK_STRUCT_START(VkBufferViewCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkBufferViewCreateFlags, flags)
  VK_STRUCT_MEMBER(VkBuffer, buffer)
  VK_STRUCT_MEMBER(VkFormat, format)
  VK_STRUCT_MEMBER(VkDeviceSize, offset)
  VK_STRUCT_MEMBER(VkDeviceSize, range)
VK_STRUCT_END

VK_STRUCT_START(VkImageCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkImageCreateFlags, flags)
  VK_STRUCT_MEMBER(VkImageType, imageType)
  VK_STRUCT_MEMBER(VkFormat, format)
  VK_STRUCT_MEMBER(VkExtent3D, extent)
  VK_STRUCT_MEMBER(uint32_t, mipLevels)
  VK_STRUCT_MEMBER(uint32_t, arrayLayers)
  VK_STRUCT_MEMBER(VkSampleCountFlagBits, samples)
  VK_STRUCT_MEMBER(VkImageTiling, tiling)
  VK_STRUCT_MEMBER(VkImageUsageFlags, usage)
  VK_STRUCT_MEMBER(VkSharingMode, sharingMode)
  VK_STRUCT_MEMBER(uint32_t, queueFamilyIndexCount)
  VK_STRUCT_MEMBER_ARRAY(uint32_t, value.queueFamilyIndexCount, pQueueFamilyIndices)
  VK_STRUCT_MEMBER(VkImageLayout, initialLayout)
VK_STRUCT_END

VK_STRUCT_START(VkSubresourceLayout)
  VK_STRUCT_MEMBER(VkDeviceSize, offset)
  VK_STRUCT_MEMBER(VkDeviceSize, size)
  VK_STRUCT_MEMBER(VkDeviceSize, rowPitch)
  VK_STRUCT_MEMBER(VkDeviceSize, arrayPitch)
  VK_STRUCT_MEMBER(VkDeviceSize, depthPitch)
VK_STRUCT_END

VK_STRUCT_START(VkComponentMapping)
  VK_STRUCT_MEMBER(VkComponentSwizzle, r)
  VK_STRUCT_MEMBER(VkComponentSwizzle, g)
  VK_STRUCT_MEMBER(VkComponentSwizzle, b)
  VK_STRUCT_MEMBER(VkComponentSwizzle, a)
VK_STRUCT_END

VK_STRUCT_START(VkImageSubresourceRange)
  VK_STRUCT_MEMBER(VkImageAspectFlags, aspectMask)
  VK_STRUCT_MEMBER(uint32_t, baseMipLevel)
  VK_STRUCT_MEMBER(uint32_t, levelCount)
  VK_STRUCT_MEMBER(uint32_t, baseArrayLayer)
  VK_STRUCT_MEMBER(uint32_t, layerCount)
VK_STRUCT_END

VK_STRUCT_START(VkImageViewCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkImageViewCreateFlags, flags)
  VK_STRUCT_MEMBER(VkImage, image)
  VK_STRUCT_MEMBER(VkImageViewType, viewType)
  VK_STRUCT_MEMBER(VkFormat, format)
  VK_STRUCT_MEMBER(VkComponentMapping, components)
  VK_STRUCT_MEMBER(VkImageSubresourceRange, subresourceRange)
VK_STRUCT_END

VK_STRUCT_START(VkShaderModuleCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkShaderModuleCreateFlags, flags)
  VK_STRUCT_MEMBER(size_t, codeSize)
  VK_STRUCT_MEMBER(void_ptr, pCode)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineCacheCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineCacheCreateFlags, flags)
  VK_STRUCT_MEMBER(size_t, initialDataSize)
  VK_STRUCT_MEMBER(void_ptr, pInitialData)
VK_STRUCT_END

VK_STRUCT_START(VkSpecializationMapEntry)
  VK_STRUCT_MEMBER(uint32_t, constantID)
  VK_STRUCT_MEMBER(uint32_t, offset)
  VK_STRUCT_MEMBER(size_t, size)
VK_STRUCT_END

VK_STRUCT_START(VkSpecializationInfo)
  VK_STRUCT_MEMBER(uint32_t, mapEntryCount)
  VK_STRUCT_MEMBER_ARRAY(VkSpecializationMapEntry, value.mapEntryCount, pMapEntries)
  VK_STRUCT_MEMBER(size_t, dataSize)
  VK_STRUCT_MEMBER(void_ptr, pData)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineShaderStageCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineShaderStageCreateFlags, flags)
  VK_STRUCT_MEMBER(VkShaderStageFlagBits, stage)
  VK_STRUCT_MEMBER(VkShaderModule, module)
  VK_STRUCT_MEMBER(cstring, pName)
  VK_STRUCT_MEMBER(VkSpecializationInfo, pSpecializationInfo)
VK_STRUCT_END

VK_STRUCT_START(VkVertexInputBindingDescription)
  VK_STRUCT_MEMBER(uint32_t, binding)
  VK_STRUCT_MEMBER(uint32_t, stride)
  VK_STRUCT_MEMBER(VkVertexInputRate, inputRate)
VK_STRUCT_END

VK_STRUCT_START(VkVertexInputAttributeDescription)
  VK_STRUCT_MEMBER(uint32_t, location)
  VK_STRUCT_MEMBER(uint32_t, binding)
  VK_STRUCT_MEMBER(VkFormat, format)
  VK_STRUCT_MEMBER(uint32_t, offset)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineVertexInputStateCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineVertexInputStateCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, vertexBindingDescriptionCount)
  VK_STRUCT_MEMBER_ARRAY(VkVertexInputBindingDescription, value.vertexBindingDescriptionCount, pVertexBindingDescriptions)
  VK_STRUCT_MEMBER(uint32_t, vertexAttributeDescriptionCount)
  VK_STRUCT_MEMBER_ARRAY(VkVertexInputAttributeDescription, value.vertexAttributeDescriptionCount, pVertexAttributeDescriptions)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineInputAssemblyStateCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineInputAssemblyStateCreateFlags, flags)
  VK_STRUCT_MEMBER(VkPrimitiveTopology, topology)
  VK_STRUCT_MEMBER(VkBool32, primitiveRestartEnable)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineTessellationStateCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineTessellationStateCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, patchControlPoints)
VK_STRUCT_END

VK_STRUCT_START(VkViewport)
  VK_STRUCT_MEMBER(float, x)
  VK_STRUCT_MEMBER(float, y)
  VK_STRUCT_MEMBER(float, width)
  VK_STRUCT_MEMBER(float, height)
  VK_STRUCT_MEMBER(float, minDepth)
  VK_STRUCT_MEMBER(float, maxDepth)
VK_STRUCT_END

VK_STRUCT_START(VkOffset2D)
  VK_STRUCT_MEMBER(int32_t, x)
  VK_STRUCT_MEMBER(int32_t, y)
VK_STRUCT_END

VK_STRUCT_START(VkExtent2D)
  VK_STRUCT_MEMBER(uint32_t, width)
  VK_STRUCT_MEMBER(uint32_t, height)
VK_STRUCT_END

VK_STRUCT_START(VkRect2D)
  VK_STRUCT_MEMBER(VkOffset2D, offset)
  VK_STRUCT_MEMBER(VkExtent2D, extent)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineViewportStateCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineViewportStateCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, viewportCount)
  VK_STRUCT_MEMBER_ARRAY(VkViewport, value.viewportCount, pViewports)
  VK_STRUCT_MEMBER(uint32_t, scissorCount)
  VK_STRUCT_MEMBER_ARRAY(VkRect2D, value.scissorCount, pScissors)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineRasterizationStateCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineRasterizationStateCreateFlags, flags)
  VK_STRUCT_MEMBER(VkBool32, depthClampEnable)
  VK_STRUCT_MEMBER(VkBool32, rasterizerDiscardEnable)
  VK_STRUCT_MEMBER(VkPolygonMode, polygonMode)
  VK_STRUCT_MEMBER(VkCullModeFlags, cullMode)
  VK_STRUCT_MEMBER(VkFrontFace, frontFace)
  VK_STRUCT_MEMBER(VkBool32, depthBiasEnable)
  VK_STRUCT_MEMBER(float, depthBiasConstantFactor)
  VK_STRUCT_MEMBER(float, depthBiasClamp)
  VK_STRUCT_MEMBER(float, depthBiasSlopeFactor)
  VK_STRUCT_MEMBER(float, lineWidth)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineMultisampleStateCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineMultisampleStateCreateFlags, flags)
  VK_STRUCT_MEMBER(VkSampleCountFlagBits, rasterizationSamples)
  VK_STRUCT_MEMBER(VkBool32, sampleShadingEnable)
  VK_STRUCT_MEMBER(float, minSampleShading)
  VK_STRUCT_MEMBER_PTR(VkSampleMask, pSampleMask)
  VK_STRUCT_MEMBER(VkBool32, alphaToCoverageEnable)
  VK_STRUCT_MEMBER(VkBool32, alphaToOneEnable)
VK_STRUCT_END

VK_STRUCT_START(VkStencilOpState)
  VK_STRUCT_MEMBER(VkStencilOp, failOp)
  VK_STRUCT_MEMBER(VkStencilOp, passOp)
  VK_STRUCT_MEMBER(VkStencilOp, depthFailOp)
  VK_STRUCT_MEMBER(VkCompareOp, compareOp)
  VK_STRUCT_MEMBER(uint32_t, compareMask)
  VK_STRUCT_MEMBER(uint32_t, writeMask)
  VK_STRUCT_MEMBER(uint32_t, reference)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineDepthStencilStateCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineDepthStencilStateCreateFlags, flags)
  VK_STRUCT_MEMBER(VkBool32, depthTestEnable)
  VK_STRUCT_MEMBER(VkBool32, depthWriteEnable)
  VK_STRUCT_MEMBER(VkCompareOp, depthCompareOp)
  VK_STRUCT_MEMBER(VkBool32, depthBoundsTestEnable)
  VK_STRUCT_MEMBER(VkBool32, stencilTestEnable)
  VK_STRUCT_MEMBER(VkStencilOpState, front)
  VK_STRUCT_MEMBER(VkStencilOpState, back)
  VK_STRUCT_MEMBER(float, minDepthBounds)
  VK_STRUCT_MEMBER(float, maxDepthBounds)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineColorBlendAttachmentState)
  VK_STRUCT_MEMBER(VkBool32, blendEnable)
  VK_STRUCT_MEMBER(VkBlendFactor, srcColorBlendFactor)
  VK_STRUCT_MEMBER(VkBlendFactor, dstColorBlendFactor)
  VK_STRUCT_MEMBER(VkBlendOp, colorBlendOp)
  VK_STRUCT_MEMBER(VkBlendFactor, srcAlphaBlendFactor)
  VK_STRUCT_MEMBER(VkBlendFactor, dstAlphaBlendFactor)
  VK_STRUCT_MEMBER(VkBlendOp, alphaBlendOp)
  VK_STRUCT_MEMBER(VkColorComponentFlags, colorWriteMask)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineColorBlendStateCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineColorBlendStateCreateFlags, flags)
  VK_STRUCT_MEMBER(VkBool32, logicOpEnable)
  VK_STRUCT_MEMBER(VkLogicOp, logicOp)
  VK_STRUCT_MEMBER(uint32_t, attachmentCount)
  VK_STRUCT_MEMBER_ARRAY(VkPipelineColorBlendAttachmentState, value.attachmentCount, pAttachments)
  VK_STRUCT_MEMBER_ARRAY(float, 4, blendConstants)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineDynamicStateCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineDynamicStateCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, dynamicStateCount)
  VK_STRUCT_MEMBER_ARRAY(VkDynamicState, value.dynamicStateCount, pDynamicStates)
VK_STRUCT_END

VK_STRUCT_START(VkGraphicsPipelineCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, stageCount)
  VK_STRUCT_MEMBER_ARRAY(VkPipelineShaderStageCreateInfo, value.stageCount, pStages)
  VK_STRUCT_MEMBER(VkPipelineVertexInputStateCreateInfo, pVertexInputState)
  VK_STRUCT_MEMBER(VkPipelineInputAssemblyStateCreateInfo, pInputAssemblyState)
  VK_STRUCT_MEMBER(VkPipelineTessellationStateCreateInfo, pTessellationState)
  VK_STRUCT_MEMBER(VkPipelineViewportStateCreateInfo, pViewportState)
  VK_STRUCT_MEMBER(VkPipelineRasterizationStateCreateInfo, pRasterizationState)
  VK_STRUCT_MEMBER(VkPipelineMultisampleStateCreateInfo, pMultisampleState)
  VK_STRUCT_MEMBER(VkPipelineDepthStencilStateCreateInfo, pDepthStencilState)
  VK_STRUCT_MEMBER(VkPipelineColorBlendStateCreateInfo, pColorBlendState)
  VK_STRUCT_MEMBER(VkPipelineDynamicStateCreateInfo, pDynamicState)
  VK_STRUCT_MEMBER(VkPipelineLayout, layout)
  VK_STRUCT_MEMBER(VkRenderPass, renderPass)
  VK_STRUCT_MEMBER(uint32_t, subpass)
  VK_STRUCT_MEMBER(VkPipeline, basePipelineHandle)
  VK_STRUCT_MEMBER(int32_t, basePipelineIndex)
VK_STRUCT_END

VK_STRUCT_START(VkComputePipelineCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineCreateFlags, flags)
  VK_STRUCT_MEMBER(VkPipelineShaderStageCreateInfo, stage)
  VK_STRUCT_MEMBER(VkPipelineLayout, layout)
  VK_STRUCT_MEMBER(VkPipeline, basePipelineHandle)
  VK_STRUCT_MEMBER(int32_t, basePipelineIndex)
VK_STRUCT_END

VK_STRUCT_START(VkPushConstantRange)
  VK_STRUCT_MEMBER(VkShaderStageFlags, stageFlags)
  VK_STRUCT_MEMBER(uint32_t, offset)
  VK_STRUCT_MEMBER(uint32_t, size)
VK_STRUCT_END

VK_STRUCT_START(VkPipelineLayoutCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkPipelineLayoutCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, setLayoutCount)
  VK_STRUCT_MEMBER_ARRAY(VkDescriptorSetLayout, value.setLayoutCount, pSetLayouts)
  VK_STRUCT_MEMBER(uint32_t, pushConstantRangeCount)
  VK_STRUCT_MEMBER_ARRAY(VkPushConstantRange, value.pushConstantRangeCount, pPushConstantRanges)
VK_STRUCT_END

VK_STRUCT_START(VkSamplerCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkSamplerCreateFlags, flags)
  VK_STRUCT_MEMBER(VkFilter, magFilter)
  VK_STRUCT_MEMBER(VkFilter, minFilter)
  VK_STRUCT_MEMBER(VkSamplerMipmapMode, mipmapMode)
  VK_STRUCT_MEMBER(VkSamplerAddressMode, addressModeU)
  VK_STRUCT_MEMBER(VkSamplerAddressMode, addressModeV)
  VK_STRUCT_MEMBER(VkSamplerAddressMode, addressModeW)
  VK_STRUCT_MEMBER(float, mipLodBias)
  VK_STRUCT_MEMBER(VkBool32, anisotropyEnable)
  VK_STRUCT_MEMBER(float, maxAnisotropy)
  VK_STRUCT_MEMBER(VkBool32, compareEnable)
  VK_STRUCT_MEMBER(VkCompareOp, compareOp)
  VK_STRUCT_MEMBER(float, minLod)
  VK_STRUCT_MEMBER(float, maxLod)
  VK_STRUCT_MEMBER(VkBorderColor, borderColor)
  VK_STRUCT_MEMBER(VkBool32, unnormalizedCoordinates)
VK_STRUCT_END

VK_STRUCT_START(VkDescriptorSetLayoutBinding)
  VK_STRUCT_MEMBER(uint32_t, binding)
  VK_STRUCT_MEMBER(VkDescriptorType, descriptorType)
  VK_STRUCT_MEMBER(uint32_t, descriptorCount)
  VK_STRUCT_MEMBER(VkShaderStageFlags, stageFlags)
  VK_STRUCT_MEMBER_ARRAY(VkSampler, value.descriptorCount, pImmutableSamplers)
VK_STRUCT_END

VK_STRUCT_START(VkDescriptorSetLayoutCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkDescriptorSetLayoutCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, bindingCount)
  VK_STRUCT_MEMBER_ARRAY(VkDescriptorSetLayoutBinding, value.bindingCount, pBindings)
VK_STRUCT_END

VK_STRUCT_START(VkDescriptorPoolSize)
  VK_STRUCT_MEMBER(VkDescriptorType, type)
  VK_STRUCT_MEMBER(uint32_t, descriptorCount)
VK_STRUCT_END

VK_STRUCT_START(VkDescriptorPoolCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkDescriptorPoolCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, maxSets)
  VK_STRUCT_MEMBER(uint32_t, poolSizeCount)
  VK_STRUCT_MEMBER_ARRAY(VkDescriptorPoolSize, value.poolSizeCount, pPoolSizes)
VK_STRUCT_END

VK_STRUCT_START(VkDescriptorSetAllocateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkDescriptorPool, descriptorPool)
  VK_STRUCT_MEMBER(uint32_t, descriptorSetCount)
  VK_STRUCT_MEMBER_ARRAY(VkDescriptorSetLayout, value.descriptorSetCount, pSetLayouts)
VK_STRUCT_END

VK_STRUCT_START(VkDescriptorImageInfo)
  VK_STRUCT_MEMBER(VkSampler, sampler)
  VK_STRUCT_MEMBER(VkImageView, imageView)
  VK_STRUCT_MEMBER(VkImageLayout, imageLayout)
VK_STRUCT_END

VK_STRUCT_START(VkDescriptorBufferInfo)
  VK_STRUCT_MEMBER(VkBuffer, buffer)
  VK_STRUCT_MEMBER(VkDeviceSize, offset)
  VK_STRUCT_MEMBER(VkDeviceSize, range)
VK_STRUCT_END

VK_STRUCT_START(VkWriteDescriptorSet)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkDescriptorSet, dstSet)
  VK_STRUCT_MEMBER(uint32_t, dstBinding)
  VK_STRUCT_MEMBER(uint32_t, dstArrayElement)
  VK_STRUCT_MEMBER(uint32_t, descriptorCount)
  VK_STRUCT_MEMBER(VkDescriptorType, descriptorType)
  VK_STRUCT_MEMBER_ARRAY(VkDescriptorImageInfo, value.descriptorCount, pImageInfo)
  VK_STRUCT_MEMBER_ARRAY(VkDescriptorBufferInfo, value.descriptorCount, pBufferInfo)
  VK_STRUCT_MEMBER_ARRAY(VkBufferView, value.descriptorCount, pTexelBufferView)
VK_STRUCT_END

VK_STRUCT_START(VkCopyDescriptorSet)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkDescriptorSet, srcSet)
  VK_STRUCT_MEMBER(uint32_t, srcBinding)
  VK_STRUCT_MEMBER(uint32_t, srcArrayElement)
  VK_STRUCT_MEMBER(VkDescriptorSet, dstSet)
  VK_STRUCT_MEMBER(uint32_t, dstBinding)
  VK_STRUCT_MEMBER(uint32_t, dstArrayElement)
  VK_STRUCT_MEMBER(uint32_t, descriptorCount)
VK_STRUCT_END

VK_STRUCT_START(VkFramebufferCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkFramebufferCreateFlags, flags)
  VK_STRUCT_MEMBER(VkRenderPass, renderPass)
  VK_STRUCT_MEMBER(uint32_t, attachmentCount)
  VK_STRUCT_MEMBER_ARRAY(VkImageView, value.attachmentCount, pAttachments)
  VK_STRUCT_MEMBER(uint32_t, width)
  VK_STRUCT_MEMBER(uint32_t, height)
  VK_STRUCT_MEMBER(uint32_t, layers)
VK_STRUCT_END

VK_STRUCT_START(VkAttachmentDescription)
  VK_STRUCT_MEMBER(VkAttachmentDescriptionFlags, flags)
  VK_STRUCT_MEMBER(VkFormat, format)
  VK_STRUCT_MEMBER(VkSampleCountFlagBits, samples)
  VK_STRUCT_MEMBER(VkAttachmentLoadOp, loadOp)
  VK_STRUCT_MEMBER(VkAttachmentStoreOp, storeOp)
  VK_STRUCT_MEMBER(VkAttachmentLoadOp, stencilLoadOp)
  VK_STRUCT_MEMBER(VkAttachmentStoreOp, stencilStoreOp)
  VK_STRUCT_MEMBER(VkImageLayout, initialLayout)
  VK_STRUCT_MEMBER(VkImageLayout, finalLayout)
VK_STRUCT_END

VK_STRUCT_START(VkAttachmentReference)
  VK_STRUCT_MEMBER(uint32_t, attachment)
  VK_STRUCT_MEMBER(VkImageLayout, layout)
VK_STRUCT_END

VK_STRUCT_START(VkSubpassDescription)
  VK_STRUCT_MEMBER(VkSubpassDescriptionFlags, flags)
  VK_STRUCT_MEMBER(VkPipelineBindPoint, pipelineBindPoint)
  VK_STRUCT_MEMBER(uint32_t, inputAttachmentCount)
  VK_STRUCT_MEMBER_ARRAY(VkAttachmentReference, value.inputAttachmentCount, pInputAttachments)
  VK_STRUCT_MEMBER(uint32_t, colorAttachmentCount)
  VK_STRUCT_MEMBER_ARRAY(VkAttachmentReference, value.colorAttachmentCount, pColorAttachments)
  VK_STRUCT_MEMBER_ARRAY(VkAttachmentReference, value.colorAttachmentCount, pResolveAttachments)
  VK_STRUCT_MEMBER(VkAttachmentReference, pDepthStencilAttachment)
  VK_STRUCT_MEMBER(uint32_t, preserveAttachmentCount)
  VK_STRUCT_MEMBER_ARRAY(uint32_t, value.preserveAttachmentCount, pPreserveAttachments)
VK_STRUCT_END

VK_STRUCT_START(VkSubpassDependency)
  VK_STRUCT_MEMBER(uint32_t, srcSubpass)
  VK_STRUCT_MEMBER(uint32_t, dstSubpass)
  VK_STRUCT_MEMBER(VkPipelineStageFlags, srcStageMask)
  VK_STRUCT_MEMBER(VkPipelineStageFlags, dstStageMask)
  VK_STRUCT_MEMBER(VkAccessFlags, srcAccessMask)
  VK_STRUCT_MEMBER(VkAccessFlags, dstAccessMask)
  VK_STRUCT_MEMBER(VkDependencyFlags, dependencyFlags)
VK_STRUCT_END

VK_STRUCT_START(VkRenderPassCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkRenderPassCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, attachmentCount)
  VK_STRUCT_MEMBER_ARRAY(VkAttachmentDescription, value.attachmentCount, pAttachments)
  VK_STRUCT_MEMBER(uint32_t, subpassCount)
  VK_STRUCT_MEMBER_ARRAY(VkSubpassDescription, value.subpassCount, pSubpasses)
  VK_STRUCT_MEMBER(uint32_t, dependencyCount)
  VK_STRUCT_MEMBER_ARRAY(VkSubpassDependency, value.dependencyCount, pDependencies)
VK_STRUCT_END

VK_STRUCT_START(VkCommandPoolCreateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkCommandPoolCreateFlags, flags)
  VK_STRUCT_MEMBER(uint32_t, queueFamilyIndex)
VK_STRUCT_END

VK_STRUCT_START(VkCommandBufferAllocateInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkCommandPool, commandPool)
  VK_STRUCT_MEMBER(VkCommandBufferLevel, level)
  VK_STRUCT_MEMBER(uint32_t, commandBufferCount)
VK_STRUCT_END

VK_STRUCT_START(VkCommandBufferInheritanceInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkRenderPass, renderPass)
  VK_STRUCT_MEMBER(uint32_t, subpass)
  VK_STRUCT_MEMBER(VkFramebuffer, framebuffer)
  VK_STRUCT_MEMBER(VkBool32, occlusionQueryEnable)
  VK_STRUCT_MEMBER(VkQueryControlFlags, queryFlags)
  VK_STRUCT_MEMBER(VkQueryPipelineStatisticFlags, pipelineStatistics)
VK_STRUCT_END

VK_STRUCT_START(VkCommandBufferBeginInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkCommandBufferUsageFlags, flags)
  VK_STRUCT_MEMBER(VkCommandBufferInheritanceInfo, pInheritanceInfo)
VK_STRUCT_END

VK_STRUCT_START(VkBufferCopy)
  VK_STRUCT_MEMBER(VkDeviceSize, srcOffset)
  VK_STRUCT_MEMBER(VkDeviceSize, dstOffset)
  VK_STRUCT_MEMBER(VkDeviceSize, size)
VK_STRUCT_END

VK_STRUCT_START(VkImageSubresourceLayers)
  VK_STRUCT_MEMBER(VkImageAspectFlags, aspectMask)
  VK_STRUCT_MEMBER(uint32_t, mipLevel)
  VK_STRUCT_MEMBER(uint32_t, baseArrayLayer)
  VK_STRUCT_MEMBER(uint32_t, layerCount)
VK_STRUCT_END

VK_STRUCT_START(VkImageCopy)
  VK_STRUCT_MEMBER(VkImageSubresourceLayers, srcSubresource)
  VK_STRUCT_MEMBER(VkOffset3D, srcOffset)
  VK_STRUCT_MEMBER(VkImageSubresourceLayers, dstSubresource)
  VK_STRUCT_MEMBER(VkOffset3D, dstOffset)
  VK_STRUCT_MEMBER(VkExtent3D, extent)
VK_STRUCT_END

VK_STRUCT_START(VkImageBlit)
  VK_STRUCT_MEMBER(VkImageSubresourceLayers, srcSubresource)
  VK_STRUCT_MEMBER_ARRAY(VkOffset3D, 2, srcOffsets)
  VK_STRUCT_MEMBER(VkImageSubresourceLayers, dstSubresource)
  VK_STRUCT_MEMBER_ARRAY(VkOffset3D, 2, dstOffsets)
VK_STRUCT_END

VK_STRUCT_START(VkBufferImageCopy)
  VK_STRUCT_MEMBER(VkDeviceSize, bufferOffset)
  VK_STRUCT_MEMBER(uint32_t, bufferRowLength)
  VK_STRUCT_MEMBER(uint32_t, bufferImageHeight)
  VK_STRUCT_MEMBER(VkImageSubresourceLayers, imageSubresource)
  VK_STRUCT_MEMBER(VkOffset3D, imageOffset)
  VK_STRUCT_MEMBER(VkExtent3D, imageExtent)
VK_STRUCT_END

VK_STRUCT_START(VkClearColorValue)
  VK_STRUCT_MEMBER_ARRAY(float, 4, float32)
  VK_STRUCT_MEMBER_ARRAY(int32_t, 4, int32)
  VK_STRUCT_MEMBER_ARRAY(uint32_t, 4, uint32)
VK_STRUCT_END

VK_STRUCT_START(VkClearDepthStencilValue)
  VK_STRUCT_MEMBER(float, depth)
  VK_STRUCT_MEMBER(uint32_t, stencil)
VK_STRUCT_END

VK_STRUCT_START(VkClearValue)
  VK_STRUCT_MEMBER(VkClearColorValue, color)
  VK_STRUCT_MEMBER(VkClearDepthStencilValue, depthStencil)
VK_STRUCT_END

VK_STRUCT_START(VkClearAttachment)
  VK_STRUCT_MEMBER(VkImageAspectFlags, aspectMask)
  VK_STRUCT_MEMBER(uint32_t, colorAttachment)
  VK_STRUCT_MEMBER(VkClearValue, clearValue)
VK_STRUCT_END

VK_STRUCT_START(VkClearRect)
  VK_STRUCT_MEMBER(VkRect2D, rect)
  VK_STRUCT_MEMBER(uint32_t, baseArrayLayer)
  VK_STRUCT_MEMBER(uint32_t, layerCount)
VK_STRUCT_END

VK_STRUCT_START(VkImageResolve)
  VK_STRUCT_MEMBER(VkImageSubresourceLayers, srcSubresource)
  VK_STRUCT_MEMBER(VkOffset3D, srcOffset)
  VK_STRUCT_MEMBER(VkImageSubresourceLayers, dstSubresource)
  VK_STRUCT_MEMBER(VkOffset3D, dstOffset)
  VK_STRUCT_MEMBER(VkExtent3D, extent)
VK_STRUCT_END

VK_STRUCT_START(VkMemoryBarrier)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkAccessFlags, srcAccessMask)
  VK_STRUCT_MEMBER(VkAccessFlags, dstAccessMask)
VK_STRUCT_END

VK_STRUCT_START(VkBufferMemoryBarrier)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkAccessFlags, srcAccessMask)
  VK_STRUCT_MEMBER(VkAccessFlags, dstAccessMask)
  VK_STRUCT_MEMBER(uint32_t, srcQueueFamilyIndex)
  VK_STRUCT_MEMBER(uint32_t, dstQueueFamilyIndex)
  VK_STRUCT_MEMBER(VkBuffer, buffer)
  VK_STRUCT_MEMBER(VkDeviceSize, offset)
  VK_STRUCT_MEMBER(VkDeviceSize, size)
VK_STRUCT_END

VK_STRUCT_START(VkImageMemoryBarrier)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkAccessFlags, srcAccessMask)
  VK_STRUCT_MEMBER(VkAccessFlags, dstAccessMask)
  VK_STRUCT_MEMBER(VkImageLayout, oldLayout)
  VK_STRUCT_MEMBER(VkImageLayout, newLayout)
  VK_STRUCT_MEMBER(uint32_t, srcQueueFamilyIndex)
  VK_STRUCT_MEMBER(uint32_t, dstQueueFamilyIndex)
  VK_STRUCT_MEMBER(VkImage, image)
  VK_STRUCT_MEMBER(VkImageSubresourceRange, subresourceRange)
VK_STRUCT_END

VK_STRUCT_START(VkRenderPassBeginInfo)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(void_ptr, pNext)
  VK_STRUCT_MEMBER(VkRenderPass, renderPass)
  VK_STRUCT_MEMBER(VkFramebuffer, framebuffer)
  VK_STRUCT_MEMBER(VkRect2D, renderArea)
  VK_STRUCT_MEMBER(uint32_t, clearValueCount)
  VK_STRUCT_MEMBER_ARRAY(VkClearValue, value.clearValueCount, pClearValues)
VK_STRUCT_END

VK_STRUCT_START(VkDispatchIndirectCommand)
  VK_STRUCT_MEMBER(uint32_t, x)
  VK_STRUCT_MEMBER(uint32_t, y)
  VK_STRUCT_MEMBER(uint32_t, z)
VK_STRUCT_END

VK_STRUCT_START(VkDrawIndexedIndirectCommand)
  VK_STRUCT_MEMBER(uint32_t, indexCount)
  VK_STRUCT_MEMBER(uint32_t, instanceCount)
  VK_STRUCT_MEMBER(uint32_t, firstIndex)
  VK_STRUCT_MEMBER(int32_t, vertexOffset)
  VK_STRUCT_MEMBER(uint32_t, firstInstance)
VK_STRUCT_END

VK_STRUCT_START(VkDrawIndirectCommand)
  VK_STRUCT_MEMBER(uint32_t, vertexCount)
  VK_STRUCT_MEMBER(uint32_t, instanceCount)
  VK_STRUCT_MEMBER(uint32_t, firstVertex)
  VK_STRUCT_MEMBER(uint32_t, firstInstance)
VK_STRUCT_END

VK_STRUCT_START(VkBaseOutStructure)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(VkBaseOutStructure, pNext)
VK_STRUCT_END

VK_STRUCT_START(VkBaseInStructure)
  VK_STRUCT_MEMBER(VkStructureType, sType)
  VK_STRUCT_MEMBER(VkBaseInStructure, pNext)
VK_STRUCT_END

}
}

#endif
