{
  "comments": [
    {
      "key": {
        "uuid": "806eddc6_1de431fb",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-15T13:55:54Z",
      "side": 1,
      "message": "Related headers should be first in the list of included files:\nhttps://engdoc.corp.google.com/eng/doc/devguide/cpp/styleguide.md#Names_and_Order_of_Includes",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33108590_9fabf81f",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "806eddc6_1de431fb",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71999261_d858b3e6",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-16T12:39:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33108590_9fabf81f",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "109de21b_f340fde2",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-15T13:55:54Z",
      "side": 1,
      "message": "#include \u003ccstdint\u003e\nfor definitions of int64_t, etc.",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a34a64b_3845a842",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "109de21b_f340fde2",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c140488_363cfa78",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-16T12:39:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a34a64b_3845a842",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8b4341c_01953d4d",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-15T13:55:54Z",
      "side": 1,
      "message": "return text.compare(0, start.length(), start)\u003d\u003d0;",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "780724f6_1a5e0475",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8b4341c_01953d4d",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67964cce_461323c6",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-16T12:39:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "780724f6_1a5e0475",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cceed7ef_57cf7889",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-15T13:55:54Z",
      "side": 1,
      "message": "The following is easier to read (IMO) and doesn\u0027t have any error-prone integer arithmetic:\nstd::istringstream istr(toSplit);\nstd::string token;\nwhile(std::getline(istr, token, \u0027 \u0027)) {\n  result.insert(token);\n}\nYou\u0027ll need to #include \u003csstream\u003e at the top.",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87d3134f_a9ea9cd3",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cceed7ef_57cf7889",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f7773de_6080fa26",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-16T12:39:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87d3134f_a9ea9cd3",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90321771_f38bed48",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2018-10-15T14:45:51Z",
      "side": 1,
      "message": "Suggest these move to before the function definitions (not sure if this is in the style guide...)",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73b8735a_759ce39e",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90321771_f38bed48",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "615bb55f_78d18242",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2018-10-16T13:57:12Z",
      "side": 1,
      "message": "Also... let\u0027s s/My/pcu/ (or a different prefix of your choice).",
      "parentUuid": "73b8735a_759ce39e",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1ab8812_52599555",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-11-07T14:18:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "615bb55f_78d18242",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ba8de20_6fe37782",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-15T13:55:54Z",
      "side": 1,
      "message": "Set these function pointers to 0 and then initialize all of them in one go at startup, rather than haphazardly, below.",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c88161b9_84ada0b7",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "The reason that they are not initialized together at startup is that we can not be sure that they are available. This code needs to run on any device that supports OpengGL-ES 2.0 or higher, which is practically all Android devices. These dynamically loaded functions depend on different GL versions. I am investigating a cleaner way to do it.",
      "parentUuid": "6ba8de20_6fe37782",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78be954f_dea96834",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-16T12:39:19Z",
      "side": 1,
      "message": "Can you check at start up for availability though, and assign the pointers then? I just don\u0027t like having function pointers pointing to random bits of memory sitting around. I\u0027d set them to zero\nMyTypeGlGetstringi glGetStringi \u003d 0;\nand check for whether they\u0027ve been initialized when you use them:\nif(glGetStringi) {\n  glGetStringi(...);\n}",
      "parentUuid": "c88161b9_84ada0b7",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7383a70a_76485351",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T13:25:23Z",
      "side": 1,
      "message": "I thought they were automatically initialized to zero, since they are global?\n\nAlso, eglGetProcAddress function does not guarantee to return 0 in case of error:\nhttps://www.khronos.org/registry/EGL/sdk/docs/man/html/eglGetProcAddress.xhtml\nhttps://twitter.com/id_aa_carmack/status/387383037794603008?lang\u003den\n\nSo checking for zero-ness would not be too helpful.\n\nHowever, this is the first time I implemented dynamic function loading myself. I am sure you have much more experience. So I am open to any corrections and/or further suggestions.",
      "parentUuid": "78be954f_dea96834",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b524fd5e_2360edcf",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-16T13:52:09Z",
      "side": 1,
      "message": "You\u0027re right that they are initialized to zero at startup - my bad. It\u0027s still a good idea to check if they are non-zero when you call them and only assign to them if you know the function is supported (assuming the gl driver is not lying).",
      "parentUuid": "7383a70a_76485351",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9a8ca50_520f6068",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2018-10-16T13:57:12Z",
      "side": 1,
      "message": "It is not guaranteed that the pointer will be initialized to NULL (AFAIK). I would suggest doing so explicitly. \n\nThe behaviour of eglGetProcAddress sounds gross :(",
      "parentUuid": "7383a70a_76485351",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d350f830_6417e65e",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-11-07T14:18:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9a8ca50_520f6068",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02b0f672_f3eb39c5",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 276,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-15T13:55:54Z",
      "side": 1,
      "message": "Why are these constants defined here rather than being in an opengl header?",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dd6e36b_89ca7970",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 276,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "Same deal as above. I can not include the headers above GL-ES 2.0, because I can not be sure they are available on the device. I am investigating a cleaner way to do it.",
      "parentUuid": "02b0f672_f3eb39c5",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c394fc14_09a3d7ef",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 276,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-16T12:39:19Z",
      "side": 1,
      "message": "You only need the headers available when compiling your program, not when it\u0027s running on a device, or am I misunderstanding something?",
      "parentUuid": "0dd6e36b_89ca7970",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f0c0a52_2aaa3b88",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 276,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T13:25:23Z",
      "side": 1,
      "message": "I believe you are correct. I will need to clarify how we will deploy this code and get back to answer this.",
      "parentUuid": "c394fc14_09a3d7ef",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08b0f936_b26de934",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 276,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2018-10-16T13:57:12Z",
      "side": 1,
      "message": "AFAIK it will be fine to include the header and then dynamically link the function pointers. As long as the resulting executable runs on a non-GL device it\u0027s all good.",
      "parentUuid": "1f0c0a52_2aaa3b88",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a9d400d_ea6b66f8",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 276,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-11-07T14:18:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08b0f936_b26de934",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7add17c_737063db",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 335,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-15T13:55:54Z",
      "side": 1,
      "message": "Ditto re constants",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0312f572_3ef4da9f",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 335,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7add17c_737063db",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69a70119_59dd6212",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 432,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-15T13:55:54Z",
      "side": 1,
      "message": "Ditto re constants",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99a9aebe_eea158b5",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 432,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69a70119_59dd6212",
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0d234ed_f5dea74f",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 560,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-15T13:55:54Z",
      "side": 1,
      "message": "This will do nothing if readNumCpus returned an error. Is that what you want, or should you report something?",
      "range": {
        "startLine": 554,
        "startChar": 0,
        "endLine": 560,
        "endChar": 3
      },
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "013dfe3e_31856577",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 560,
      "author": {
        "id": 1376637
      },
      "writtenOn": "2018-10-16T11:36:12Z",
      "side": 1,
      "message": "Yes, this is the behavior I want. Also, this part changed a bit on later patches. I record the numCpu separately as cpu_max_index.",
      "parentUuid": "c0d234ed_f5dea74f",
      "range": {
        "startLine": 554,
        "startChar": 0,
        "endLine": 560,
        "endChar": 3
      },
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64286051_137b6fc5",
        "filename": "performance-utils/device_info.cc",
        "patchSetId": 4
      },
      "lineNbr": 560,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2018-10-16T12:39:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "013dfe3e_31856577",
      "range": {
        "startLine": 554,
        "startChar": 0,
        "endLine": 560,
        "endChar": 3
      },
      "revId": "07683a8f990f84da54ed1e2569f34e63190a9c63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}