{
  "comments": [
    {
      "key": {
        "uuid": "bd9ee897_288717f7",
        "filename": "include/tuningfork/tuningfork.h",
        "patchSetId": 3
      },
      "lineNbr": 215,
      "author": {
        "id": 1395136
      },
      "writtenOn": "2019-10-09T14:40:17Z",
      "side": 1,
      "message": "Not connected to current cl, but can we return TFERROR_ALREADY_INITIALIZED or something similar if function is calling twice?",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 215,
        "endChar": 101
      },
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01c59541_86b5ab20",
        "filename": "include/tuningfork/tuningfork_extra.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1395136
      },
      "writtenOn": "2019-10-09T14:34:24Z",
      "side": 1,
      "message": "Can you keep \"context\" ?",
      "range": {
        "startLine": 30,
        "startChar": 62,
        "endLine": 30,
        "endChar": 65
      },
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4b50369_1ca7a9b6",
        "filename": "include/tuningfork/tuningfork_extra.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2019-10-11T10:05:53Z",
      "side": 1,
      "message": "Removed in the next CL",
      "parentUuid": "01c59541_86b5ab20",
      "range": {
        "startLine": 30,
        "startChar": 62,
        "endLine": 30,
        "endChar": 65
      },
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd3626eb_394ab8b2",
        "filename": "include/tuningfork/tuningfork_extra.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1395136
      },
      "writtenOn": "2019-10-09T14:34:24Z",
      "side": 1,
      "message": "Same as previous",
      "range": {
        "startLine": 35,
        "startChar": 68,
        "endLine": 35,
        "endChar": 71
      },
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8db8871a_6a19fd13",
        "filename": "include/tuningfork/tuningfork_extra.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2019-10-11T10:05:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd3626eb_394ab8b2",
      "range": {
        "startLine": 35,
        "startChar": 68,
        "endLine": 35,
        "endChar": 71
      },
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2766235d_ed4a2273",
        "filename": "src/tuningfork/tuningfork.cpp",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1554536
      },
      "writtenOn": "2019-10-11T08:50:16Z",
      "side": 1,
      "message": "Do we a naming convention for member variables? It looks different in different parts of the project.",
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "415dec66_9489b65b",
        "filename": "src/tuningfork/tuningfork.cpp",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2019-10-11T10:10:35Z",
      "side": 1,
      "message": "In library code, we (should) use AOSP / Google standard, so _ separating words and a _ at the end of a member variable. Bouncyball was written using camel case and there are other inconsistencies that need resolving.",
      "parentUuid": "2766235d_ed4a2273",
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9442f705_74d99a5e",
        "filename": "src/tuningfork/tuningfork.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1395136
      },
      "writtenOn": "2019-10-09T14:32:06Z",
      "side": 1,
      "message": "Is there overhead to keep jnictx in separate .cpp and .h files? If i need to find jnictx implementation i need to go through all files to find it.",
      "range": {
        "startLine": 286,
        "startChar": 1,
        "endLine": 291,
        "endChar": 1
      },
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1423d9e2_2563b544",
        "filename": "src/tuningfork/tuningfork.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2019-10-11T10:05:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9442f705_74d99a5e",
      "range": {
        "startLine": 286,
        "startChar": 1,
        "endLine": 291,
        "endChar": 1
      },
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "939a6328_3d405ff6",
        "filename": "src/tuningfork/tuningfork_internal.h",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1395136
      },
      "writtenOn": "2019-10-09T14:26:30Z",
      "side": 1,
      "message": "Should it be in tuningfork / tuningfork_extra?",
      "range": {
        "startLine": 181,
        "startChar": 2,
        "endLine": 193,
        "endChar": 0
      },
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e6ae36b_d67caa6d",
        "filename": "src/tuningfork/tuningfork_internal.h",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2019-10-11T10:05:53Z",
      "side": 1,
      "message": "Moved in a subsequent CL",
      "parentUuid": "939a6328_3d405ff6",
      "range": {
        "startLine": 181,
        "startChar": 2,
        "endLine": 193,
        "endChar": 0
      },
      "revId": "ca69d69be1d1831c04fe503906f3a9c75bd9bed4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}