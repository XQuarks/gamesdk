import org.gradle.internal.os.OperatingSystem;

apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    ndkVersion "21.2.6472646"
    defaultConfig {
        applicationId "com.tuningfork.insightsdemo"
        minSdkVersion 29
        targetSdkVersion 29
        versionCode 30
        versionName "1.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'

    // GMS Core dependencies
    implementation "com.google.android.gms:play-services-clearcut:16.0.0"

    testImplementation 'junit:junit:4.12'
}

task createJar(type: GradleBuild) {
    buildFile = '../../../../src/tuningfork/tools/validation/build.gradle'
    tasks = ['createJar']
}

def getProtocPath() {
    String platformName
    if (OperatingSystem.current().isLinux()) platformName = "linux-x86/bin/protoc"
    if (OperatingSystem.current().isMacOsX()) platformName = "mac/bin/protoc"
    if (OperatingSystem.current().isWindows()) platformName = "win/bin/protoc"
    return "../../../../third_party/protobuf-3.0.0/install/"  + platformName
}

task buildTuningForkBinFiles(type: Exec) {
    dependsOn createJar
    commandLine "java",
            "-jar",
            "../../../../src/tuningfork/tools/validation/build/libs/TuningforkApkValidationTool.jar",
            "--tuningforkPath",
            "src/main/assets/tuningfork",
            "--protoCompiler",
            getProtocPath()
}

tasks.preBuild.dependsOn("buildTuningForkBinFiles")
