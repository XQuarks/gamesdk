{
  "comments": [
    {
      "key": {
        "uuid": "75c26c7b_5108acae",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 1
      },
      "lineNbr": 427,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2020-03-16T21:59:46Z",
      "side": 1,
      "message": "Why do we need to add this check ? we do want to get to a point that mCommonSettings.refreshPeriod*(mAutoSwapInterval) \u003c\u003d mAutoSwapIntervalThresholdNS.load() and then to bypass swappy completely",
      "revId": "f1f4edb112fb4daf13c9fff734f17c13153f0f55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b3ff16c_310ce533",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 1
      },
      "lineNbr": 427,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2020-03-16T22:14:29Z",
      "side": 1,
      "message": "I think we want some limit, or mAutoSwapInterval can increase to \u003e mAutoSwapIntervalThresholdNS/refreshPeriod.",
      "parentUuid": "75c26c7b_5108acae",
      "revId": "f1f4edb112fb4daf13c9fff734f17c13153f0f55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3372fd8b_faaeefd9",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 1
      },
      "lineNbr": 427,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2020-03-16T23:35:50Z",
      "side": 1,
      "message": "but with this check line 244 will always be true and we will never bypass swappy...",
      "parentUuid": "7b3ff16c_310ce533",
      "revId": "f1f4edb112fb4daf13c9fff734f17c13153f0f55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59fc71c5_c9f1db7c",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 1
      },
      "lineNbr": 518,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2020-03-16T21:59:46Z",
      "side": 1,
      "message": "even if swap interval is the same and we just change the pipeline config, configChanged still need to be true to remove the old stats and start recording fresh ones.",
      "revId": "f1f4edb112fb4daf13c9fff734f17c13153f0f55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59ba30c8_ea6ee449",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 1
      },
      "lineNbr": 518,
      "author": {
        "id": 1373878
      },
      "writtenOn": "2020-03-16T22:14:29Z",
      "side": 1,
      "message": "If the pipeline config hasn\u0027t changed though, we don\u0027t want to wait another 2s before considering switching again, do we?",
      "parentUuid": "59fc71c5_c9f1db7c",
      "revId": "f1f4edb112fb4daf13c9fff734f17c13153f0f55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a298116a_2ad3d400",
        "filename": "src/swappy/common/SwappyCommon.cpp",
        "patchSetId": 1
      },
      "lineNbr": 518,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2020-03-16T23:35:50Z",
      "side": 1,
      "message": "I think we do, since timing may change (different load, clocks may lock on a different freq, etc.)",
      "parentUuid": "59ba30c8_ea6ee449",
      "revId": "f1f4edb112fb4daf13c9fff734f17c13153f0f55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c54fd73_9c7ef521",
        "filename": "test/swappy/swappycommon_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1498014
      },
      "writtenOn": "2020-03-17T09:29:53Z",
      "side": 1,
      "message": "A bit worried of using randomness in tests, could we have a vector of times that we repeat?\n\n```\nstatic size_t step \u003d 0;\nstatic std::vector\u003cduration\u003e distribution{20ms, 20ms, 10ms, 20ms, 20ms}; // Maybe longer to simulate some noise and reach 10% of the time.\n\nreturn {\n  [\u0026]() { auto time \u003d distribution[step % distribution.size()]; step++; return time; }, // cpu\n  []() { return 10ms; }, // gpu\n}\n```",
      "revId": "f1f4edb112fb4daf13c9fff734f17c13153f0f55",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}