{
  "comments": [
    {
      "key": {
        "uuid": "82c1f697_0134c189",
        "filename": "bender/bender-base/app/src/main/jni/render_graph.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2019-12-11T21:50:53Z",
      "side": 1,
      "message": "Public member data is a big no-no. Write accessors to access data if needed, better to write method to manipulate internal data.",
      "revId": "cd3c9d56d008c49a072b6c7df4e151200b38b57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f754c477_de6403b2",
        "filename": "bender/bender-base/app/src/main/jni/vulkan_main.cc",
        "patchSetId": 6
      },
      "lineNbr": 256,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2019-12-11T21:50:53Z",
      "side": 1,
      "message": "Call methods on render_graph to do the calculations instead of exposing internal objects.",
      "revId": "cd3c9d56d008c49a072b6c7df4e151200b38b57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "498998cd_25c9c437",
        "filename": "bender/bender-base/app/src/main/jni/vulkan_main.cc",
        "patchSetId": 6
      },
      "lineNbr": 256,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2019-12-11T22:02:03Z",
      "side": 1,
      "message": "Maybe I was unclear on what we meant when we talked about RenderGraph not being able to manipulate any of the data within it, I interpreted that as essentially RenderGraph being a struct sort of object that provided views to the data stored within it that you could access, as well as just the raw data contained within (basically like the camera struct we had before)\n\nit seemed a little extra to return like a const reference to the data in the class (which essentially gives the same access as just making the data public) or write a bunch of wrapping code around the vector and camera object stored within the render_graph (such as methods for setting the camera\u0027s FOV/aspect_ration/etc)",
      "parentUuid": "f754c477_de6403b2",
      "revId": "cd3c9d56d008c49a072b6c7df4e151200b38b57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad6642db_f5a2edd9",
        "filename": "bender/bender-base/app/src/main/jni/vulkan_main.cc",
        "patchSetId": 6
      },
      "lineNbr": 256,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2019-12-11T22:06:12Z",
      "side": 1,
      "message": "I\u0027m ok with writing wrapping to manipulate objects inside the class. Every time you feel the need to make a member public, you must have an extraordinary good motivation for doing so and breaking the abstraction, which I don\u0027t see here.",
      "parentUuid": "498998cd_25c9c437",
      "revId": "cd3c9d56d008c49a072b6c7df4e151200b38b57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e86df852_b6c7bd40",
        "filename": "bender/bender-base/app/src/main/jni/vulkan_main.cc",
        "patchSetId": 6
      },
      "lineNbr": 256,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2019-12-11T22:10:08Z",
      "side": 1,
      "message": "Addendum: here I see a bunch of calculations that essentially depends on delta_x, delta_y. I would rather see these calculations moved inside the camera class and, eventually, the render_graph object yielding a camera back to the client to update it, which is ok.",
      "parentUuid": "ad6642db_f5a2edd9",
      "revId": "cd3c9d56d008c49a072b6c7df4e151200b38b57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}