{
  "comments": [
    {
      "key": {
        "uuid": "1ede100b_7a147d0a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1098333
      },
      "writtenOn": "2018-11-27T03:58:12Z",
      "side": 1,
      "message": "Typo: Choreographer",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6460ed19_dd4d0ab3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-27T18:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ede100b_7a147d0a",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dabaf682_ec4eae8a",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1098333
      },
      "writtenOn": "2018-11-27T03:58:12Z",
      "side": 1,
      "message": "Thinking out loud ... these new members are for a subset of the subclasses.  Does it make sense to document that?  I don\u0027t believe in lots of extra work, but it might be help future maintainers.",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4de0ac3_71c1b567",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-27T18:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dabaf682_ec4eae8a",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fa10ac3_50706398",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 437,
      "author": {
        "id": 1098333
      },
      "writtenOn": "2018-11-27T03:58:12Z",
      "side": 1,
      "message": "I like that you inherited from one of the existing classes!\n\nHowever, I\u0027m not sure that you\u0027re reusing enough of this class (e.g. calculateNextDesiredPresentTime and checkPastPresentTiming).  I realize that I may be missing things though.",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c0d0ef9_77f7e5b8",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 437,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-27T18:29:32Z",
      "side": 1,
      "message": "Let\u0027s discuss this.",
      "parentUuid": "9fa10ac3_50706398",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df055492_8be59a4d",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 437,
      "author": {
        "id": 1098333
      },
      "writtenOn": "2018-11-27T20:24:39Z",
      "side": 1,
      "message": "Sure.\n\nSo that I don\u0027t forget, I\u0027ll note that those functions make up for two things: 1) current time might be close enough to a vsync that desiredPresentTime might sometimes trigger on one side of a vsync and other times on the other; 2) SF/HWC2 don\u0027t provide accurate values (both refresh cycle duration and timestamps).  Without those, it can be easy to drift past a vsync every now and then, causing stutters.  When I wrote the code, I ran cube over and over, logging all of the times for every frame.  Sometimes, good data came back, but other times, watched a large number of different runs of cube.\n\nPerhaps Choreographer is putting current time squarely in a good place all of the time, and so perhaps you only need that.  You\u0027ve looked at the data, and that\u0027s what the decision should be based on.  In this case, I\u0027m just an overly-busy reviewer:-).",
      "parentUuid": "0c0d0ef9_77f7e5b8",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e0e8a28_2ae35465",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 476,
      "author": {
        "id": 1098333
      },
      "writtenOn": "2018-11-27T03:58:12Z",
      "side": 1,
      "message": "See the comments I put in the old code.  To summarize:\n\n1) The return type is VkResult, not bool\n\n2) Tou should not return here without calling vkQueuePresentKHR",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bb2a42c_91aacc59",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 476,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-27T18:29:32Z",
      "side": 1,
      "message": "This is the lambda function given to std::condition_variable and the return indicates whether the condition to wait for has met. \nThe function will never exit without calling vkQueuePresentKHR.",
      "parentUuid": "6e0e8a28_2ae35465",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0605e71_f845ca43",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 478,
      "author": {
        "id": 1098333
      },
      "writtenOn": "2018-11-27T03:58:12Z",
      "side": 1,
      "message": "Ditto",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80297874_e76532a7",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 478,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-27T18:29:32Z",
      "side": 1,
      "message": "same here",
      "parentUuid": "f0605e71_f845ca43",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a2043e9_8feb4cb8",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1098333
      },
      "writtenOn": "2018-11-27T03:58:12Z",
      "side": 1,
      "message": "Perhaps I\u0027m not understanding how this works, but I\u0027m concerned that you\u0027re getting the current time again (after potentially waiting) and then incrementing mNextDesiredPresentTime.  Seems like you could end up scheduling way out into the future.  Am I missing something?",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "276cfa0f_08e4e335",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-27T18:29:32Z",
      "side": 1,
      "message": "If previous mNextDesiredPresentTime is in the future, we sleep for the next frame (we \"skip the number of frames based on the interval).\nAt this point, we want to present the next frame (we already have 1 in the queue) in the next period.",
      "parentUuid": "4a2043e9_8feb4cb8",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25219bb1_1b9c9a57",
        "filename": "src/swappyVk/SwappyVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1098333
      },
      "writtenOn": "2018-11-27T20:24:39Z",
      "side": 1,
      "message": "Okay, that makes sense.  I also got tripped up by the Choreographer/lambda function stuff up above.  Thanks for explaining.",
      "parentUuid": "276cfa0f_08e4e335",
      "revId": "f71fc6738199d2c201882cf40d26b4dbba83f114",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}