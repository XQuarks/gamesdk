{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "560c328c_d5d10d86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1935817
      },
      "writtenOn": "2022-01-27T00:00:56Z",
      "side": 1,
      "message": "PTAL\n\nPlatform detection on EAP documentation (https://developer.android.com/games/preview/multiplatform/platform_req#platform_detection) do not have an option to detect Battlestar using C++, what can be the best option to detect the platform? Is it possible to get the package manager from C++ Game Activity? Using include guards is a good option for us?\n\nAlso, which other good practices we can follow for C++ development? (i.e. create a single file for new Google Play Games code)\n\nudam@ natetrost@ what are your thoughts?",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf92ea61_2b3ebe1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-01-27T17:43:58Z",
      "side": 1,
      "message": "For AGDKTunnel specifically, if you were going to add this, I would probably add a isGooglePlayGames function to AGDKTunnelActivity which does the platform check. This would be called from native_engine.cpp during initialization and would just set a mRunningOnGooglePlayGames member variable in native_engine. If you were going to check it from somewhere else in the code, maybe adding a GetRunningOnGooglePlayGames() accessor.",
      "parentUuid": "560c328c_d5d10d86",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb719fe3_a201cff4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1579844
      },
      "writtenOn": "2022-01-27T18:36:43Z",
      "side": 1,
      "message": "+1, but I\u0027m not sure if keyboard controls itself should be behind a B* flag. Some Android devices do have a keyboard. It could be worth a comment or maybe behind a flag that detects if a keyboard is available.",
      "parentUuid": "bf92ea61_2b3ebe1e",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cb2b904_00389f2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1935817
      },
      "writtenOn": "2022-01-27T18:49:33Z",
      "side": 1,
      "message": "I believe that one of the purposes of AGDK is to manage the connected devices, for example, this game already supports joystick movement if a joystick is connected\n\nDo you think that having this under a B* flag can be a good example of how to do it from a C++ game even if it is not completely necessary?",
      "parentUuid": "eb719fe3_a201cff4",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46c1ef78_a12bcf7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1579844
      },
      "writtenOn": "2022-01-27T18:53:02Z",
      "side": 1,
      "message": "I\u0027ll leave that up to Nate, but to me, it probably makes more sense to have it work in the general case if it doesn\u0027t already.",
      "parentUuid": "6cb2b904_00389f2c",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "441afad4_1afe8598",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1935817
      },
      "writtenOn": "2022-01-28T00:59:57Z",
      "side": 1,
      "message": "I have added the B* flag on CookGameActivityKeyEvent (input_util.cpp), preventing to cook movement keyboard events if the game is not running on GooglePlayGames and hence disabling keyboard controls, is there another place in code where I should add the B* flag?",
      "parentUuid": "46c1ef78_a12bcf7c",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb5304bb_a163123e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-02-03T17:28:41Z",
      "side": 1,
      "message": "I think it is fine without any gating for now. Game Controller 1.2 will include the ability to detect hardware keyboards, once that is available I may gate keyboard inputs behind something like `hasHardwareKeyboard() || isGooglePlayGames()`",
      "parentUuid": "eb719fe3_a201cff4",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35db1c75_9c3f2a7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1579844
      },
      "writtenOn": "2022-02-03T17:58:49Z",
      "side": 1,
      "message": "I believe Google Play Games on PC should return that it has a hardware keyboard. If not, I think we should file a bug on our team to fix this. Ideally, we shouldn\u0027t have too many \"isGooglePlayGames\" and try to fit pretty nicely with the standard android ecosystem.",
      "parentUuid": "cb5304bb_a163123e",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ab4b96e_45b660ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1935817
      },
      "writtenOn": "2022-02-10T00:27:27Z",
      "side": 1,
      "message": "I think that adding a function hasHardwareKeyboard for Google Play Games is not a practice we want to show/foster for developers, I believe that we should provide the confidence of that if their game is running in B* then a hardware keyboard should be connected.\n\nJust to make sure it works I have tested the following code:\n```\npublic class AGDKTunnelActivity extends GameActivity {\n  ...\n  public boolean isGooglePlayGames() {\n    PackageManager pm \u003d getPackageManager();\n    boolean hasPlayGamesFeature \u003d pm\n        .hasSystemFeature(\"com.google.android.play.feature.HPE_EXPERIENCE\");\n    boolean hasHardwareKeyboard \u003d getResources()\n        .getConfiguration().keyboard \u003d\u003d Configuration.KEYBOARD_QWERTY;\n    return hasPlayGamesFeature \u0026\u0026 hasHardwareKeyboard;\n  }\n  ...\n}\n```\n\nAnd the keyboard is detected on the game in B*.\n\nStill this is a good place for the Game Controller 1.2 function hasHardwareKeyboard() when it gets ready.",
      "parentUuid": "35db1c75_9c3f2a7a",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e12da58_daf22b51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1579844
      },
      "writtenOn": "2022-02-10T00:35:17Z",
      "side": 1,
      "message": "You are correct in that assuming a hardware keyboard exists when Google Play Games on PC is being used. However, now the developer has to special case their build here, when just hasHardwareKeyboard is enough. This is counter a bit, to what we want to encourage overall for both the developer and for the android os experience as well. \n\nTom Cherry, and other leads from the Android side of Battlestar would also like to ensure we aren\u0027t special casing battlestar where it really isn\u0027t necessary.",
      "parentUuid": "6ab4b96e_45b660ec",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c8d9cb4_e4067a50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1935817
      },
      "writtenOn": "2022-02-16T22:01:22Z",
      "side": 1,
      "message": "Talked with Neil about this. I will remove the `isGooglePlayGames` condition to enable keyboard controls, so this sample app can be compatible with Chrome OS too.\n\nInstead, to showcase platform detection I will extend the gameplay as described in b/219774994.\n\nThanks for your comments on this.",
      "parentUuid": "6e12da58_daf22b51",
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf1a9e49_f3ebdd0e",
        "filename": "samples/agdktunnel/app/src/main/cpp/input_util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-01-27T17:43:58Z",
      "side": 1,
      "message": "nit: const int32_t",
      "range": {
        "startLine": 80,
        "startChar": 19,
        "endLine": 80,
        "endChar": 22
      },
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "411f14bc_1d35063b",
        "filename": "samples/agdktunnel/app/src/main/cpp/input_util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1935817
      },
      "writtenOn": "2022-01-28T00:59:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf1a9e49_f3ebdd0e",
      "range": {
        "startLine": 80,
        "startChar": 19,
        "endLine": 80,
        "endChar": 22
      },
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6fc5efa_db492349",
        "filename": "samples/agdktunnel/app/src/main/cpp/input_util.hpp",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-01-27T17:43:58Z",
      "side": 1,
      "message": "nit: const int32_t",
      "range": {
        "startLine": 74,
        "startChar": 19,
        "endLine": 74,
        "endChar": 22
      },
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c7baaf0_63cdeb80",
        "filename": "samples/agdktunnel/app/src/main/cpp/input_util.hpp",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1935817
      },
      "writtenOn": "2022-01-28T00:59:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6fc5efa_db492349",
      "range": {
        "startLine": 74,
        "startChar": 19,
        "endLine": 74,
        "endChar": 22
      },
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a395186c_afd7facc",
        "filename": "samples/agdktunnel/app/src/main/cpp/play_scene.cpp",
        "patchSetId": 1
      },
      "lineNbr": 825,
      "author": {
        "id": 1715047
      },
      "writtenOn": "2022-01-27T17:43:58Z",
      "side": 1,
      "message": "I\u0027d recommend defining mask constants instead of using 1/2/4/8 literals",
      "range": {
        "startLine": 825,
        "startChar": 28,
        "endLine": 825,
        "endChar": 29
      },
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1b76790_e0f5d222",
        "filename": "samples/agdktunnel/app/src/main/cpp/play_scene.cpp",
        "patchSetId": 1
      },
      "lineNbr": 825,
      "author": {
        "id": 1935817
      },
      "writtenOn": "2022-01-28T00:59:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a395186c_afd7facc",
      "range": {
        "startLine": 825,
        "startChar": 28,
        "endLine": 825,
        "endChar": 29
      },
      "revId": "f5b17459dfade670f3e12754b47cecd5f69b7e98",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}