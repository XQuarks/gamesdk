{
  "comments": [
    {
      "key": {
        "uuid": "8a4e93e1_7d78cfdb",
        "filename": "bender/bender-base/app/src/main/jni/vulkan_main.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2019-12-12T17:25:53Z",
      "side": 1,
      "message": "What are polyfaces and matrerialIdx used for?",
      "revId": "38fffe7d0e16dcd57ce5051183a9cca0c5a5e8d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a7bb630_10d903e1",
        "filename": "bender/bender-base/app/src/main/jni/vulkan_main.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2019-12-12T17:35:16Z",
      "side": 1,
      "message": "Those are used for knowing what the current selection of Material/Polyhedron is (for creation of new Meshes or for the switching to new geometry/material) - they are indexes into vector/array of Material/Geometry objects respectively\n\nIt\u0027s kinda specific to the current state of bender right now since all we have right now are a fixed set of polyhedron/materials we swap between",
      "parentUuid": "8a4e93e1_7d78cfdb",
      "revId": "38fffe7d0e16dcd57ce5051183a9cca0c5a5e8d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01ffa6a2_b38f709e",
        "filename": "bender/bender-base/app/src/main/jni/vulkan_main.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2019-12-12T17:38:01Z",
      "side": 1,
      "message": "I see, that also should live outside then. It\u0027s not the RG responsability.\nRenderGraph should have two primitives:\n- AddMesh(...);\n- RemoveMesh(...);\n\nHow you identify a Mesh, by index, by name or by pointer is an implementation detail. Clients use these two primitives to manipulate the render graph.",
      "parentUuid": "4a7bb630_10d903e1",
      "revId": "38fffe7d0e16dcd57ce5051183a9cca0c5a5e8d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f3a9c7f_c488b9bb",
        "filename": "bender/bender-base/app/src/main/jni/vulkan_main.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1578313
      },
      "writtenOn": "2019-12-12T17:52:42Z",
      "side": 1,
      "message": "Ok, I just thought since those were important features of the state of the scene (in our current implementation) that it would fit within RenerGraph, but I can move it back into vulkan_main for now until we find a better place for them\n\nBecause all we do right now are operations on the entire list of Mesh/last added Mesh, are the operations I have currently implemented enough, or should I implement a system of names/handles in RenderGraph and implement the current functionality of Bender using only AddMesh/RemoveMesh?",
      "parentUuid": "01ffa6a2_b38f709e",
      "revId": "38fffe7d0e16dcd57ce5051183a9cca0c5a5e8d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d8a4e30_fd47fa42",
        "filename": "bender/bender-base/app/src/main/jni/vulkan_main.cc",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2019-12-12T17:55:14Z",
      "side": 1,
      "message": "I feel we should just get it right, but it might be over engineering it. It\u0027s your call.",
      "parentUuid": "8f3a9c7f_c488b9bb",
      "revId": "38fffe7d0e16dcd57ce5051183a9cca0c5a5e8d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}