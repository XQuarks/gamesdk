{
  "comments": [
    {
      "key": {
        "uuid": "0a93cc50_ae4620c7",
        "filename": "src/swappy/src/main/cpp/ChoreographerThread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2018-11-29T23:18:16Z",
      "side": 1,
      "message": "nit: spaces after and before the brackers",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d76bf538_239a68f5",
        "filename": "src/swappy/src/main/cpp/ChoreographerThread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-29T23:54:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a93cc50_ae4620c7",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acaf78c9_e1244ee6",
        "filename": "src/swappy/src/main/cpp/ChoreographerThread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2018-11-29T23:18:16Z",
      "side": 1,
      "message": "\"should be unlocked\"",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e1acab9_7b2355e0",
        "filename": "src/swappy/src/main/cpp/ChoreographerThread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-29T23:54:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acaf78c9_e1244ee6",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8687d776_6b22e05e",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2018-11-29T23:18:16Z",
      "side": 1,
      "message": "This is confusing: mUsingExternalChoreographer is true but we are creating our own choreo thread, not using an external one?\nI would remove the boolean and just do:\nif (swappy-\u003emChoreographerThread \u003d\u003d nullptr) {\n..\n}",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7528401_c7fd726a",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-29T23:54:13Z",
      "side": 1,
      "message": "We always use choreo thread class even when app is providing choreograph callbacks.\nThe reason for this is to exercise the same code path for all options.\n\nswappy always gets choreographs callbacks from ChoreographThread. In the case where app is calling Swappy_onChoreograph, this call will go to ChoreographThread and then back to swappy using the common path.\n\nswappy-\u003emChoreographerThread is never nullptr. It is initialized first in swappy_init, and then if Swappy_onChoreograph is called, we reinitialize it with the correct parameters. There is a limitation on JNI side that we have to initialize on swappy_init() (else the ChoreographCallback class will not be loaded).",
      "parentUuid": "8687d776_6b22e05e",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fbb107c_8ea1911d",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2018-11-30T00:09:57Z",
      "side": 1,
      "message": "Yes, that\u0027s my point (if I understand the code correctly).\nIf we don\u0027t create the thread class in the constructor, but lazily either the first time OnChoreo is called or on the first swap, we can also use it as flag and remove the boolean because the name is confusing.",
      "parentUuid": "e7528401_c7fd726a",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "462b21f5_c7f12017",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-30T00:12:31Z",
      "side": 1,
      "message": "Even if we could initialize from OnChoreo, we still need to know whether to call swappy-\u003emChoreographerThread-\u003epostFrameCallbacks(); from swappy::swapy",
      "parentUuid": "4fbb107c_8ea1911d",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23497f11_fa988098",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2018-11-30T00:14:43Z",
      "side": 1,
      "message": "Yeah, I was looking at that bit now. It\u0027s ok, I see if I can find a way to get away without the bool in the next few days. Thanks!",
      "parentUuid": "462b21f5_c7f12017",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e438e9d3_04f507b4",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-30T00:12:31Z",
      "side": 1,
      "message": "here",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4e276f7_79552bce",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2018-11-29T23:18:16Z",
      "side": 1,
      "message": "I would just create the thread lazily in one place (in ::swap) instead of creating it potentially twice.",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c003f220_5ea8d1f4",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-29T23:54:13Z",
      "side": 1,
      "message": "This would be better, but since we may use Java choreographer, we must first call to env-\u003eFindClass(ChoreographCallback) from the main thread.\nIf we do it from the swap, we cannot load the class (even if app is linked to it).",
      "parentUuid": "d4e276f7_79552bce",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f5defe3_361513e6",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2018-11-30T00:09:57Z",
      "side": 1,
      "message": "Can we do it lazily from OnChoreo?",
      "parentUuid": "c003f220_5ea8d1f4",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "571e950c_b19d2d75",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-30T00:12:31Z",
      "side": 1,
      "message": "No, we have to call env-\u003eFindClass from the main thread.",
      "parentUuid": "5f5defe3_361513e6",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c6645e0_6ebb6371",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2018-11-29T23:18:16Z",
      "side": 1,
      "message": "nit: spaces",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9baa3224_e65a3530",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1388190
      },
      "writtenOn": "2018-11-29T23:54:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c6645e0_6ebb6371",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0883feb_a303b9c3",
        "filename": "src/swappy/src/main/cpp/Swappy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1376737
      },
      "writtenOn": "2018-11-30T00:09:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9baa3224_e65a3530",
      "revId": "ce1c001825a9de3248f68f2c3cb12f56260f7d0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}